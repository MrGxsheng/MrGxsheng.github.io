<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>枫叶苑</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-08T06:58:20.902Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Mr笙</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Dilworth定理</title>
    <link href="http://example.com/2022/10/08/%E5%AF%BC%E5%BC%B9%E6%8B%A6%E6%88%AA/"/>
    <id>http://example.com/2022/10/08/%E5%AF%BC%E5%BC%B9%E6%8B%A6%E6%88%AA/</id>
    <published>2022-10-08T00:26:57.000Z</published>
    <updated>2022-10-08T06:58:20.902Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Diwoth定理"><a href="#Diwoth定理" class="headerlink" title="Diwoth定理"></a>Diwoth定理</h3><h4 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h4><p><strong>偏序集上最小链划分中链的数量等于其反链长度的最大值。</strong></p><ul><li>什么是链？</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们假设在若干元素构成一个集合，那么，这个集合是链当且仅当这个集合的所有元素两两是可比的。换句话说，你可以看成是某个偏序关系中的元素。</span><br></pre></td></tr></table></figure><ul><li>什么叫最小链划分？</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们将S中的所有元素划分成若干条链，使每个元素都在且仅在唯一一条链中，叫链划分。最小就是指数量最小。</span><br></pre></td></tr></table></figure><ul><li>什么是反链</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">正如名字一样，反链和链的定义恰好相反，对于一个集合，它是反链当且仅当这个集合里的元素两两都是不可比的。换句话说，这个集合里的任何两个元素无法联通。比如，偏序关系是大于，那么反链中的关系就是必然满足小于等于。</span><br></pre></td></tr></table></figure><h3 id="例题-导弹拦截"><a href="#例题-导弹拦截" class="headerlink" title="例题 导弹拦截"></a>例题 导弹拦截</h3><h4 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h4><p><a href="https://www.acwing.com/problem/content/1012/">1010. 拦截导弹 - AcWing题库</a></p><h4 id="题目思路"><a href="#题目思路" class="headerlink" title="题目思路"></a>题目思路</h4><p>第一问就是求 最长不上升子序列</p><p>第二问根据Diwoth定理可得 最少配备的数量 &#x3D; 最长上升子序列的长度</p><h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; b[N];</span><br><span class="line"><span class="type">int</span> dp[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; a[++n]);</span><br><span class="line">    n--;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">        f[i] = <span class="number">1</span>;</span><br><span class="line">        dp[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt; i ; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] &lt;= a[j]) f[i] = <span class="built_in">max</span>(f[j] + <span class="number">1</span>,f[i]);</span><br><span class="line">            <span class="keyword">if</span>(a[i] &gt; a[j]) dp[i] = <span class="built_in">max</span>(dp[i] , dp[j] + <span class="number">1</span>);</span><br><span class="line">            cnt = <span class="built_in">max</span>(cnt,dp[i]);</span><br><span class="line">            res = <span class="built_in">max</span>(res,f[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; res &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Diwoth定理&quot;&gt;&lt;a href=&quot;#Diwoth定理&quot; class=&quot;headerlink&quot; title=&quot;Diwoth定理&quot;&gt;&lt;/a&gt;Diwoth定理&lt;/h3&gt;&lt;h4 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="Dilworth" scheme="http://example.com/categories/Dilworth/"/>
    
    
    <category term="Dilworth" scheme="http://example.com/tags/Dilworth/"/>
    
  </entry>
  
  <entry>
    <title>AtCode242题解（A-D）</title>
    <link href="http://example.com/2022/10/07/ArCode242%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2022/10/07/ArCode242%E9%A2%98%E8%A7%A3/</id>
    <published>2022-10-07T00:26:57.000Z</published>
    <updated>2022-10-07T08:27:49.582Z</updated>
    
    <content type="html"><![CDATA[<h3 id="A-T-shirt"><a href="#A-T-shirt" class="headerlink" title="A T-shirt"></a>A <strong>T-shirt</strong></h3><h4 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h4><p><a href="https://atcoder.jp/contests/abc242/tasks/abc242_a">A - T-shirt (atcoder.jp)</a></p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>签到题 给4个数 AＢC X 对 排在A 前面的人 一定发T-shirt 对 A - B 的人 选择发体恤 如果排在A前面 概率就是1 A - B 中间 就用 发送的T-shirt数量&#x2F; （A - B） B 后面的 概率就是0</p><h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; c &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span>(x &lt;= n) cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">12</span>) &lt;&lt; <span class="number">1.000000000000</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x &gt; m) cout &lt;&lt;fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">12</span>)&lt;&lt; <span class="number">0.000000000000</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">12</span>)&lt;&lt; c / (m - n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-Minimize-Ordering"><a href="#B-Minimize-Ordering" class="headerlink" title="B Minimize Ordering"></a>B <strong>Minimize Ordering</strong></h3><h4 id="题目链接-1"><a href="#题目链接-1" class="headerlink" title="题目链接"></a>题目链接</h4><p><a href="https://atcoder.jp/contests/abc242/tasks/abc242_b">B - Minimize Ordering (atcoder.jp)</a></p><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>给一个字符串 求 该字符串 字典序的第一个</p><h4 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">    <span class="comment">//可以求出 a数组的真实位数</span></span><br><span class="line">n = <span class="built_in">strlen</span>(a);</span><br><span class="line"><span class="built_in">sort</span>(a,a + n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++) cout &lt;&lt; a[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-1111gal-password"><a href="#C-1111gal-password" class="headerlink" title="C 1111gal password"></a>C <strong>1111gal password</strong></h3><h4 id="题目链接-2"><a href="#题目链接-2" class="headerlink" title="题目链接"></a>题目链接</h4><p><a href="https://atcoder.jp/contests/abc242/tasks/abc242_c">C - 1111gal password (atcoder.jp)</a></p><h4 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h4><p>简单的数位dp 定义f[i] [j]为 位数为i 并且以 j为结尾的集合 </p><h4 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= <span class="number">9</span> ; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">1</span>) f[<span class="number">2</span>][i] = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">9</span>) f[<span class="number">2</span>][i] = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> f[<span class="number">2</span>][i] = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">3</span> ; i &lt;= n ; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= <span class="number">9</span> ; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">1</span>) f[i][j] = (f[i - <span class="number">1</span>][j + <span class="number">1</span>] + f[i - <span class="number">1</span>][j] + f[i][j]) % mod;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(j == <span class="number">9</span>) f[i][j] = (f[i - <span class="number">1</span>][j - <span class="number">1</span>] + f[i - <span class="number">1</span>][j] + f[i][j]) % mod ;</span><br><span class="line"><span class="keyword">else</span> f[i][j] = (f[i - <span class="number">1</span>][j + <span class="number">1</span>] + f[i - <span class="number">1</span>][j] + f[i - <span class="number">1</span>][j - <span class="number">1</span>] + f[i][j] ) % mod;</span><br><span class="line">&#125;</span><br><span class="line">LL res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= <span class="number">9</span> ; i++) res = (res + f[n][i]) % mod;</span><br><span class="line">cout &lt;&lt; res % mod &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="D-ABC-Transform"><a href="#D-ABC-Transform" class="headerlink" title="D ABC Transform"></a>D <strong>ABC Transform</strong></h3><h4 id="题目链接-3"><a href="#题目链接-3" class="headerlink" title="题目链接"></a>题目链接</h4><p><a href="https://atcoder.jp/contests/abc215/tasks/abc215_d"><a href="https://atcoder.jp/contests/abc242/tasks/abc242_d">D - ABC Transform (atcoder.jp)</a></a></p><h4 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h4><p>给一个 由A B C 组成的字符串 每次变化的时候（层数） 会将所有的 A 变成 B C，B 变成 A C ，C 变成 A B 然后Q此询问 每次询问X层数的第Y个字符是什么 </p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>将每层的变化 都画出来 可以发现 这是一颗二叉搜索树</p><p>每次查询 我们都可以通过 dfs 来寻找 树根</p><p>因为字符 只有ABC 三种变化 因此 每深搜3层 字符就会变回来</p><h4 id="Code-3"><a href="#Code-3" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">char</span> <span class="title">dfs</span><span class="params">(LL u ,LL x)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 当前处于第0层 即没有变化的层数 直接输出即可</span></span><br><span class="line">    <span class="keyword">if</span> (u == <span class="number">0</span>) <span class="keyword">return</span> s[x - <span class="number">1</span>];</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 当x == 1 时 在树里面一定就是左儿子 直接 % 3 即可</span></span><br><span class="line">    <span class="keyword">if</span> (x == <span class="number">1</span>) <span class="keyword">return</span> (s[<span class="number">0</span>] - <span class="string">&#x27;A&#x27;</span> + u) % <span class="number">3</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//递归寻找根节点</span></span><br><span class="line"><span class="type">char</span> c = <span class="built_in">dfs</span>(u - <span class="number">1</span> , (x + <span class="number">1</span>) / <span class="number">2</span>);</span><br><span class="line">    <span class="comment">//返回字符</span></span><br><span class="line">    <span class="comment">//+2 默认此时是右儿子 如果x是奇数 代表是左二字 -1即可</span></span><br><span class="line"><span class="keyword">return</span> (c - <span class="string">&#x27;A&#x27;</span> + <span class="number">2</span> - (x &amp; <span class="number">1</span>)) % <span class="number">3</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">LL Q;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">cin &gt;&gt; Q;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(Q--)&#123;</span><br><span class="line">LL a,b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dfs</span>(a,b) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;A-T-shirt&quot;&gt;&lt;a href=&quot;#A-T-shirt&quot; class=&quot;headerlink&quot; title=&quot;A T-shirt&quot;&gt;&lt;/a&gt;A &lt;strong&gt;T-shirt&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接</summary>
      
    
    
    
    <category term="AtCode" scheme="http://example.com/categories/AtCode/"/>
    
    
    <category term="AtCode" scheme="http://example.com/tags/AtCode/"/>
    
  </entry>
  
  <entry>
    <title>AtCode215题解（A-D）</title>
    <link href="http://example.com/2022/10/06/AtCode215%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2022/10/06/AtCode215%E9%A2%98%E8%A7%A3/</id>
    <published>2022-10-06T00:26:57.000Z</published>
    <updated>2022-10-07T08:21:44.540Z</updated>
    
    <content type="html"><![CDATA[<h3 id="A-Your-First-Judge"><a href="#A-Your-First-Judge" class="headerlink" title="A Your First Judge"></a>A <strong>Your First Judge</strong></h3><h4 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h4><p><a href="https://atcoder.jp/contests/abc215/tasks/abc215_a">A - Your First Judge (atcoder.jp)</a></p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>签到题 给一个字符串，与Hello，World! 对比 一样的话就输出AC其他输出WA</p><h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">string ss = <span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line">n = s.<span class="built_in">length</span>();</span><br><span class="line"><span class="keyword">if</span>(n != <span class="number">12</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;WA&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">12</span> ; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] != ss[i])&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;WA&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;AC&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-log2（N）"><a href="#B-log2（N）" class="headerlink" title="B log2（N）"></a>B <strong>log2（N）</strong></h3><h4 id="题目链接-1"><a href="#题目链接-1" class="headerlink" title="题目链接"></a>题目链接</h4><p><a href="https://atcoder.jp/contests/abc215/tasks/abc215_b">B - log2(N) (atcoder.jp)</a></p><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>给一个数 求不大于他的2的最大次幂，看N的 二进制 的最高位即可</p><h4 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="comment">//_lg 可以求出最高位的1</span></span><br><span class="line">m = _lg(n);</span><br><span class="line">cout &lt;&lt; m &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-One-More-aab-aba-baa"><a href="#C-One-More-aab-aba-baa" class="headerlink" title="C One More aab aba baa"></a>C <strong>One More aab aba baa</strong></h3><h4 id="题目链接-2"><a href="#题目链接-2" class="headerlink" title="题目链接"></a>题目链接</h4><p><a href="https://atcoder.jp/contests/abc215/tasks/abc215_c">C - One More aab aba baa (atcoder.jp)</a></p><h4 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h4><p>给定一个字符串s, 求他的全排列，输出字典序的第 n 个</p><p>可以用 stl函数next_permutation（） 求全排列 且是按照字典序排序的</p><p>需要注意的是 在求全排列的时候 需要先排序 保证一开始的字典序最小</p><h4 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s &gt;&gt; n;</span><br><span class="line">map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line">m = s.<span class="built_in">length</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; m ; i++) &#123;</span><br><span class="line">a[i] = s[i];</span><br><span class="line">mp[s[i] - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">26</span> ; i++)</span><br><span class="line"><span class="keyword">while</span>(mp[i]--) a[ans++] = <span class="built_in">char</span>(i + <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(cnt == n)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; m ; i++)</span><br><span class="line">cout &lt;&lt; a[i];</span><br><span class="line"> <span class="keyword">return</span>;</span><br><span class="line"> &#125;</span><br><span class="line">cnt++;</span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="built_in">next_permutation</span>(a,a+m));</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="D-Coprime-2"><a href="#D-Coprime-2" class="headerlink" title="D Coprime 2"></a>D <strong>Coprime 2</strong></h3><h4 id="题目链接-3"><a href="#题目链接-3" class="headerlink" title="题目链接"></a>题目链接</h4><p><a href="https://atcoder.jp/contests/abc215/tasks/abc215_d">D - Coprime 2 (atcoder.jp)</a></p><h4 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h4><p>给一个数组a[N] 和 一个数m 需要挑选出 1-m 中 与 数组a中的每个数 gcd 都是1的数 最后输出总个数和符合条件的数字</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>首先 1不管和谁 的最大公约数 都是1 所以1就是其中的一个答案</p><p>然后其他的数 如果这个数 是数组a中数的倍数 或者 是 数组a中数的因数的倍数 那么gcd也不会是1 </p><p>这里用 prime数组 标记 不符合的数</p><p>用 set 记录 每次筛选时候的起始 避免重复筛选</p><h4 id="Code-3"><a href="#Code-3" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = p;i &lt;= m;i += p) prime[i] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    set &lt;<span class="type">int</span>&gt; st;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">if</span>(a[i] == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        prime[a[i]] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">2</span>;j &lt;= <span class="built_in">sqrt</span>(a[i]);j++) </span><br><span class="line">            <span class="keyword">if</span>(a[i] % j == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!st.<span class="built_in">count</span>(j)) &#123;</span><br><span class="line">                    <span class="built_in">change</span>(j);</span><br><span class="line">                    st.<span class="built_in">insert</span>(j);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(!st.<span class="built_in">count</span>(a[i] / j)) &#123;</span><br><span class="line">                    <span class="built_in">change</span>(a[i] / j);</span><br><span class="line">                    st.<span class="built_in">insert</span>(j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector &lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= m;i++) </span><br><span class="line">        <span class="keyword">if</span>(!prime[i])</span><br><span class="line">            ans.<span class="built_in">push_back</span>(i);</span><br><span class="line">    cout &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> x:ans) cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;A-Your-First-Judge&quot;&gt;&lt;a href=&quot;#A-Your-First-Judge&quot; class=&quot;headerlink&quot; title=&quot;A Your First Judge&quot;&gt;&lt;/a&gt;A &lt;strong&gt;Your First Judge&lt;/stro</summary>
      
    
    
    
    <category term="AtCode" scheme="http://example.com/categories/AtCode/"/>
    
    
    <category term="AtCode" scheme="http://example.com/tags/AtCode/"/>
    
  </entry>
  
  <entry>
    <title>模拟链表</title>
    <link href="http://example.com/2022/10/05/%E6%A8%A1%E6%8B%9F%E9%93%BE%E8%A1%A8/"/>
    <id>http://example.com/2022/10/05/%E6%A8%A1%E6%8B%9F%E9%93%BE%E8%A1%A8/</id>
    <published>2022-10-05T00:26:57.000Z</published>
    <updated>2022-10-05T08:27:47.995Z</updated>
    
    <content type="html"><![CDATA[<h3 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">singleLinkedList</span> &#123;</span><br><span class="line">    <span class="comment">//head 表示头结点的下标</span></span><br><span class="line">    <span class="comment">//e[i]  表示结点i的值</span></span><br><span class="line">    <span class="comment">//ne[i] 表示节点i的next指针是多少</span></span><br><span class="line">    <span class="comment">//idx 存储当前已经用到了那个点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">100010</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> head;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> idx;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] e = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] ne = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">while</span> (m-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> k, x;</span><br><span class="line">            <span class="comment">//char op = sc.next().charAt(0);  下边比较可以用op == ’‘；</span></span><br><span class="line">            String[] op = sc.next().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (op[<span class="number">0</span>].equals(<span class="string">&quot;H&quot;</span>)) &#123;</span><br><span class="line">                x = sc.nextInt();</span><br><span class="line">                add_to_head(x);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op[<span class="number">0</span>].equals(<span class="string">&quot;D&quot;</span>)) &#123;</span><br><span class="line">                k = sc.nextInt();</span><br><span class="line">                <span class="keyword">if</span> (k == <span class="number">0</span>) head = ne[head];</span><br><span class="line">                <span class="keyword">else</span> remove(k - <span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                k = sc.nextInt();</span><br><span class="line">                x = sc.nextInt();</span><br><span class="line">                add(k - <span class="number">1</span>, x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> head; i != -<span class="number">1</span>; i = ne[i]) System.out.print(e[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        head = -<span class="number">1</span>;</span><br><span class="line">        idx = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将x插到头节点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">add_to_head</span><span class="params">(<span class="type">int</span> x)</span>&#123;</span><br><span class="line">        e[idx] = x;</span><br><span class="line">        ne[idx] = head;</span><br><span class="line">        head = idx;</span><br><span class="line">        idx++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将x插到下标是k的点后面</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> x)</span>&#123;</span><br><span class="line">        e[idx] = x;</span><br><span class="line">        ne[idx] = ne[k];</span><br><span class="line">        ne[k] = idx;</span><br><span class="line">        idx++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将下标是k的点后后面的点删掉</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">remove</span><span class="params">(<span class="type">int</span> k)</span>&#123;</span><br><span class="line">        ne[k] = ne[ne[k]];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="双链表"><a href="#双链表" class="headerlink" title="双链表"></a>双链表</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">doubleLinkedList</span> &#123;</span><br><span class="line">    <span class="comment">//e[i]  表示结点i的值</span></span><br><span class="line">    <span class="comment">//idx 存储当前已经用到了那个点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">100010</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> m;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> idx;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] e = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] l = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] r = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">while</span>(m-- &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> sc.next();</span><br><span class="line">            <span class="comment">//因为idx是从2 开始 所以 这里面的k 操作都加1</span></span><br><span class="line">            <span class="keyword">if</span>(s.equals(<span class="string">&quot;L&quot;</span>))&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                add(<span class="number">0</span>,x);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s.equals(<span class="string">&quot;R&quot;</span>))&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                add(l[<span class="number">1</span>],x);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s.equals(<span class="string">&quot;D&quot;</span>))&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                remove(k+<span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s.equals(<span class="string">&quot;IL&quot;</span>))&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                add(l[k+<span class="number">1</span>],x);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                add(k+<span class="number">1</span>,x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> r[<span class="number">0</span>] ; i != <span class="number">1</span> ; i = r[i])&#123;</span><br><span class="line">            System.out.print(e[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="comment">// 0表示左端点，1表示右端点</span></span><br><span class="line">      r[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">      l[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">      idx = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//在下标是k的点的右边，插入x  如果要在k的左边插入 就调用add（l[k]，x）;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> x)</span>&#123;</span><br><span class="line">       e[idx] = x;</span><br><span class="line">       r[idx] = r[k];</span><br><span class="line">       l[idx] = k;</span><br><span class="line">       l[r[k]] = idx; <span class="comment">//这个要在前面</span></span><br><span class="line">       r[k] = idx;</span><br><span class="line">       idx++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除第k个点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">remove</span><span class="params">(<span class="type">int</span> k)</span>&#123;</span><br><span class="line">        r[l[k]] = r[k];</span><br><span class="line">        l[r[k]] = l[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;单链表&quot;&gt;&lt;a href=&quot;#单链表&quot; class=&quot;headerlink&quot; title=&quot;单链表&quot;&gt;&lt;/a&gt;单链表&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp</summary>
      
    
    
    
    <category term="模拟链表" scheme="http://example.com/categories/%E6%A8%A1%E6%8B%9F%E9%93%BE%E8%A1%A8/"/>
    
    
    <category term="模拟链表" scheme="http://example.com/tags/%E6%A8%A1%E6%8B%9F%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>并查集模板</title>
    <link href="http://example.com/2022/10/01/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    <id>http://example.com/2022/10/01/%E5%B9%B6%E6%9F%A5%E9%9B%86/</id>
    <published>2022-10-01T00:26:57.000Z</published>
    <updated>2022-10-01T10:00:41.953Z</updated>
    
    <content type="html"><![CDATA[<img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220513151905755.png"/><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220513151732302.png" alt="image-20220513151732302"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">mergeSet</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">1000010</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] p = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">            p[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (m-- &gt; <span class="number">0</span> )&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> sc.next();</span><br><span class="line">            <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (s.equals(<span class="string">&quot;M&quot;</span>))&#123;</span><br><span class="line">                p[find(a)] = find(b);   <span class="comment">//给a的祖宗节点找个父亲</span></span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(find(a) != find(b)) System.out.println(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span> System.out.println(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> x)</span>&#123;      <span class="comment">//返回x的祖宗节点 + 路径压缩</span></span><br><span class="line">        <span class="keyword">if</span>(p[x] != x) p[x] = find(p[x]);</span><br><span class="line">        <span class="keyword">return</span> p[x];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果要统计每个集合的数量 可以维护一个size数组 每个树 只有根节点的size 才是有意义的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">1000010</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] p = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] size = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">            p[i] = i;</span><br><span class="line">            size[i]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (m-- &gt; <span class="number">0</span> )&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> sc.next();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (s.equals(<span class="string">&quot;C&quot;</span>))&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                <span class="keyword">if</span>(find(a) == find(b)) <span class="keyword">continue</span>;<span class="comment">//如果两个在同一个集合 就不需要 增加siae</span></span><br><span class="line">                size[find(b)] += size[find(a)];</span><br><span class="line">                p[find(a)] = find(b);   <span class="comment">//给a的祖宗节点找个父亲</span></span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s.equals(<span class="string">&quot;Q1&quot;</span>))&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                <span class="keyword">if</span>(find(a) != find(b)) System.out.println(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span> System.out.println(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">                System.out.println(size[find(a)]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> x)</span>&#123;      <span class="comment">//返回x的祖宗节点 + 路径压缩</span></span><br><span class="line">        <span class="keyword">if</span>(p[x] != x) p[x] = find(p[x]);</span><br><span class="line">        <span class="keyword">return</span> p[x];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220513151905755.png&quot;/&gt;

&lt;p&gt;&lt;img src=&quot;https://hasdsd-markdown.oss-c</summary>
      
    
    
    
    <category term="并查集" scheme="http://example.com/categories/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
    
    <category term="并查集" scheme="http://example.com/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>章鱼哥的试炼2</title>
    <link href="http://example.com/2022/09/29/%E6%B4%9B%E8%B0%B7P3008/"/>
    <id>http://example.com/2022/09/29/%E6%B4%9B%E8%B0%B7P3008/</id>
    <published>2022-09-29T00:26:57.000Z</published>
    <updated>2022-09-29T10:22:35.150Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h3><p>[P3008 <a href="https://www.luogu.com.cn/problem/P3008">USACO11JAN]Roads and Planes G - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)</a></p><h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><ol><li><p>先输入双向道路，然后DFS出所有连通块，计算两个数组：id[] 存储每个点属于哪个连通块；vector<int> block[] 存储每个连通块里有哪些点；</p></li><li><p>输入所有航线，同时统计出每个连通块的入度</p></li><li><p>按照拓扑序依次处理每个连通块.先将所有入读为0的连通块的编号加入队列中</p></li><li><p>每次从队头取出一个连通块的编号bid</p></li><li><p>将该block[bid]中的所有点加入堆中，然后对堆中所有点跑dijkstra算法</p></li><li><p>每次取出堆中距离最小的点ver</p></li><li><p>然后遍历ver的所有邻点j，如果id[ver] &#x3D;&#x3D; id[j],那么如果j能被更新，则将j插入堆中;如果id[ver] !&#x3D; id[j],则将id[j] 这个连通块的入度j减1，如果减成0了，则将其插入拓扑排序的队列中。</p></li></ol><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;-----&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>,M = <span class="number">1500010</span>,INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">int</span> n,m,mr,mp,S;</span><br><span class="line"><span class="type">int</span> h[N],e[M],ne[M],w[M],idx;</span><br><span class="line"><span class="type">int</span> dist[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"><span class="type">int</span> din[N];</span><br><span class="line"><span class="type">int</span> id[N];</span><br><span class="line"><span class="type">int</span> bcnt;</span><br><span class="line">queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; block[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b, <span class="type">int</span> c)</span></span>&#123;</span><br><span class="line">e[idx] = b;</span><br><span class="line">w[idx] = c;</span><br><span class="line">ne[idx] = h[a];</span><br><span class="line">h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> bid)</span></span>&#123;</span><br><span class="line">id[u] = bid;</span><br><span class="line">block[bid].<span class="built_in">push_back</span>(u);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = h[u] ; ~i ; i = ne[i])&#123;</span><br><span class="line"><span class="type">int</span> j = e[i];</span><br><span class="line"><span class="keyword">if</span>(!id[j]) <span class="built_in">dfs</span>(j,bid);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对优化的dijkstra</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dijkstra</span><span class="params">(<span class="type">int</span> bid)</span></span>&#123;</span><br><span class="line">priority_queue&lt;PII , vector&lt;PII&gt; , greater&lt;PII&gt;&gt; heap;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i : block[bid])</span><br><span class="line">heap.<span class="built_in">push</span>(&#123;dist[i],i&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(heap.<span class="built_in">size</span>())&#123;</span><br><span class="line"><span class="keyword">auto</span> t = heap.<span class="built_in">top</span>();</span><br><span class="line">heap.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ver = t.y;</span><br><span class="line"><span class="keyword">if</span>(st[ver]) <span class="keyword">continue</span>;</span><br><span class="line">st[ver] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = h[ver] ; ~i ; i = ne[i])&#123;</span><br><span class="line"><span class="type">int</span> j = e[i];</span><br><span class="line"><span class="keyword">if</span>(id[ver] != id[j] &amp;&amp; --din[id[j]] == <span class="number">0</span>) q.<span class="built_in">push</span>(id[j]);</span><br><span class="line"><span class="keyword">if</span>(dist[j] &gt; dist[ver] + w[i])&#123;</span><br><span class="line">dist[j] = dist[ver] + w[i];</span><br><span class="line"><span class="keyword">if</span>(id[j] == id[ver]) heap.<span class="built_in">push</span>(&#123;dist[j],j&#125;);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//拓扑排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">topsort</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(dist,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> dist);</span><br><span class="line">dist[S] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= bcnt ; i++)</span><br><span class="line"><span class="keyword">if</span>(!din[i]) q.<span class="built_in">push</span>(i);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(q.<span class="built_in">size</span>())&#123;</span><br><span class="line"><span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="built_in">dijkstra</span>(t);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; mr &gt;&gt; mp &gt;&gt; S;</span><br><span class="line"><span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line"><span class="keyword">while</span>(mr--)&#123;</span><br><span class="line"><span class="type">int</span> a,b,c;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a,b,c);</span><br><span class="line"><span class="built_in">add</span>(b,a,c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line"><span class="keyword">if</span>(!id[i]) </span><br><span class="line"></span><br><span class="line"><span class="built_in">dfs</span>(i,++bcnt);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(mp--)&#123;</span><br><span class="line"><span class="type">int</span> a,b,c;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a,b,c);</span><br><span class="line">din[id[b]] ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">topsort</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(dist[i] &gt; INF / <span class="number">2</span>) <span class="built_in">puts</span>(<span class="string">&quot;NO PATH&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; dist[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line"><span class="comment">// cin &gt;&gt; T;</span></span><br><span class="line">T = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(T--) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h3&gt;&lt;p&gt;[P3008 &lt;a href=&quot;https://www.luogu.com.cn/problem/P3008&quot;&gt;USACO1</summary>
      
    
    
    
    <category term="dijkstra" scheme="http://example.com/categories/dijkstra/"/>
    
    
    <category term="dijkstra" scheme="http://example.com/tags/dijkstra/"/>
    
  </entry>
  
  <entry>
    <title>章鱼哥的试炼1</title>
    <link href="http://example.com/2022/09/28/%E6%B4%9B%E8%B0%B7P1437/"/>
    <id>http://example.com/2022/09/28/%E6%B4%9B%E8%B0%B7P1437/</id>
    <published>2022-09-28T00:26:57.000Z</published>
    <updated>2022-09-28T10:04:12.762Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="https://www.luogu.com.cn/problem/P1347">P1347 排序 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)</a></p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>一个不同的值的升序排序数列指的是一个从左到右元素依次增大的序列，例如，一个有序的数列 $ A,B,C,D $表示$ A&lt;B,B&lt;C,C&lt;D $。在这道题中，我们将给你一系列形如$ A&lt;B $的关系，并要求你判断是否能够根据这些关系确定这个数列的顺序。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行有两个正整数 $ n,m，n $表示需要排序的元素数量，$ 2\leq n\leq 26 $，第 11 到 <em>n</em> 个元素将用大写的 $ A,B,C,D\dots $表示。<em>m</em> 表示将给出的形如$  A&lt;B $的关系的数量。</p><p>接下来有 <em>m</em> 行，每行有 3 个字符，分别为一个大写字母，一个 <code>&lt;</code> 符号，一个大写字母，表示两个元素之间的关系。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>若根据前 <em>x</em> 个关系即可确定这 <em>n</em> 个元素的顺序 <code>yyy..y</code>（如 <code>ABC</code>），输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sorted sequence determined after xxx relations: yyy...y.</span><br></pre></td></tr></table></figure><p>若根据前 x<em>x</em> 个关系即发现存在矛盾（如 A&lt;B,B&lt;C,C&lt;A<em>A</em>&lt;<em>B</em>,<em>B</em>&lt;<em>C</em>,<em>C</em>&lt;<em>A</em>），输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Inconsistency found after x relations.</span><br></pre></td></tr></table></figure><p>若根据这 <em>m</em> 个关系无法确定这 <em>n</em> 个元素的顺序，输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sorted sequence cannot be determined.</span><br></pre></td></tr></table></figure><p>（提示：确定 <em>n</em> 个元素的顺序后即可结束程序，可以不用考虑确定顺序之后出现矛盾的情况）</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * floyd 传递闭包</span></span><br><span class="line"><span class="comment"> * 及优化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;-----&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">bool</span> d[N][N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Floyd</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>  ; k &lt; n ; k++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; n ; j++)</span><br><span class="line">d[i][j] |= d[i][k] &amp;&amp; d[k][j]; <span class="comment">//i 连接k , k 连接 j 那么 i 可以连接 j</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得最小的字符</span></span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">get_min</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//枚举最小的字符</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!st[i])&#123;<span class="comment">//如果该字符已经输出过则跳过</span></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;<span class="comment">//判断是否有比 i字符更小的</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; n ; j++) </span><br><span class="line"><span class="keyword">if</span>(!st[j] &amp;&amp; d[j][i])&#123; <span class="comment">//首先要保证比较的字符没有输出过 并且 j是小于i的</span></span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)&#123; <span class="comment">//说明i是目前最小的 返回标记即可</span></span><br><span class="line">st[i] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;A&#x27;</span> + i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断目前的排序 是否满足题意</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//判断矛盾 当自己小于自己时 即为矛盾</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)</span><br><span class="line"><span class="keyword">if</span>(d[i][i]) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断当前排序是否包括所有元素</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; i ; j++)</span><br><span class="line"><span class="comment">//如果 i 和 j 没有任何关系的话 即没有排序完</span></span><br><span class="line"><span class="keyword">if</span>(!d[i][j] &amp;&amp; !d[j][i]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//表示当前排序 已经能够将所有元素 有序的排好</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每次加a，b边的时候 只需要在添加 和a ,b有关的边</span></span><br><span class="line"><span class="comment">//不用每次都跑Floyd</span></span><br><span class="line"><span class="comment">//优化 复杂度 n^2</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="type">int</span> type = <span class="number">0</span> , t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= m ; i++)&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">5</span>];</span><br><span class="line">cin &gt;&gt; str;</span><br><span class="line"><span class="type">int</span> a = str[<span class="number">0</span>] - <span class="string">&#x27;A&#x27;</span> , b = str[<span class="number">2</span>] - <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!type)&#123;</span><br><span class="line">d[a][b] = <span class="number">1</span>; <span class="comment">//将a 和 b 连一条边</span></span><br><span class="line"><span class="comment">//枚举连接a的左边 和 右边 </span></span><br><span class="line"><span class="comment">//顺序： x a ...  b y</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> x = <span class="number">0</span> ; x &lt; n ; x ++)&#123;</span><br><span class="line"><span class="keyword">if</span>(d[x][a]) d[x][b] = <span class="number">1</span>; <span class="comment">//如果x 连接a 那么 x也可以连接b</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y = <span class="number">0</span> ; y &lt; n ; y++)&#123;</span><br><span class="line"><span class="keyword">if</span>(d[b][y]) d[a][y] = <span class="number">1</span>; <span class="comment">//同上</span></span><br><span class="line"><span class="keyword">if</span>(d[x][a] &amp;&amp; d[b][y]) d[x][y] = <span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line">type = <span class="built_in">check</span>(); <span class="comment">// 判断当前排序的类型</span></span><br><span class="line"><span class="keyword">if</span>(type) t = i; <span class="comment">//记录最小值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!type) <span class="built_in">puts</span>(<span class="string">&quot;Sorted sequence cannot be determined.&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">&quot;Inconsistency found after %d relations.\n&quot;</span>, t);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Sorted sequence determined after %d relations: &quot;</span>, t);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="built_in">get_min</span>());</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Floyd 做 传递闭包 复杂度 n^3</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve1</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="type">int</span> type = <span class="number">0</span> , t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= m ; i++)&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">5</span>];</span><br><span class="line">cin &gt;&gt; str;</span><br><span class="line"><span class="type">int</span> a = str[<span class="number">0</span>] - <span class="string">&#x27;A&#x27;</span> , b = str[<span class="number">2</span>] - <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!type)&#123;</span><br><span class="line">d[a][b] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">Floyd</span>(); <span class="comment">// 添加边</span></span><br><span class="line">type = <span class="built_in">check</span>();</span><br><span class="line"><span class="keyword">if</span>(type) t = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!type) <span class="built_in">puts</span>(<span class="string">&quot;Sorted sequence cannot be determined.&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">&quot;Inconsistency found after %d relations.\n&quot;</span>, t);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Sorted sequence determined after %d relations: &quot;</span>, t);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="built_in">get_min</span>());</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line"><span class="comment">// cin &gt;&gt; T;</span></span><br><span class="line">T = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(T--) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P1347&quot;&gt;P1347 排序 - 洛谷</summary>
      
    
    
    
    <category term="传递闭包" scheme="http://example.com/categories/%E4%BC%A0%E9%80%92%E9%97%AD%E5%8C%85/"/>
    
    
    <category term="传递闭包" scheme="http://example.com/tags/%E4%BC%A0%E9%80%92%E9%97%AD%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>河南工程学院2022级第一次新生周赛</title>
    <link href="http://example.com/2022/09/26/A%E7%9A%84%E9%82%80%E8%AF%B7%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2022/09/26/A%E7%9A%84%E9%82%80%E8%AF%B7%E8%B5%9B%E9%A2%98%E8%A7%A3/</id>
    <published>2022-09-26T00:26:57.000Z</published>
    <updated>2022-09-27T00:35:24.622Z</updated>
    
    <content type="html"><![CDATA[<h2 id="A-Hello-HAUE"><a href="#A-Hello-HAUE" class="headerlink" title="A. Hello , HAUE"></a>A. Hello , HAUE</h2><hr><p><a href="https://www.luogu.com.cn/problem/U236479">原题链接</a></p><p><strong>描述</strong></p><p>欢迎大家参加河南工程学院2022级第一次新生周赛，LYS代表计算机ACM协会在此祝愿大家的大学生涯一帆风顺，自信满满；友情爱情，两全其美；三阳开泰，学业大展；魅力四射，朋友万千；五福临门，幸福美满；六六大顺，学识博渊；七步之才，知识无边；八仙过海，才华呈现；九霄云外，烦恼抛开；十全十美，大学前途熠熠生辉！！！</p><p><strong>输入格式</strong></p><p>第一行，输入一个整数 N<em>N</em>。</p><p><strong>输出格式</strong></p><p>输出占一行，不含引号。</p><p>若 <em>N</em> &#x3D; 1，输出 “One Sail Wind Go”。</p><p>若 <em>N</em>&#x3D;6，输出 “Six Six Big Go”。</p><p>若 <em>N</em>&#x3D;10，输出 “Ten OK Ten OK”。</p><p>若 <em>N</em>&#x3D;2022，输出 “Hello , HAUE”。</p><p><strong>样例输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2022</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>样例输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Hello , HAUE</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>思想</strong>：</p><ul><li>签到题，考察选择结构。</li><li>注意 “Hello , HAUE” 的符号是中文，直接复制粘贴。</li></ul><p><strong>C代码</strong>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;One Sail Wind Go\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">6</span>) <span class="built_in">printf</span>(<span class="string">&quot;Six Six Big Go\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">10</span>) <span class="built_in">printf</span>(<span class="string">&quot;Ten OK Ten OK\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;Hello , HAUE\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="B-我必须立刻签到，因为它有手就行"><a href="#B-我必须立刻签到，因为它有手就行" class="headerlink" title="B. 我必须立刻签到，因为它有手就行"></a>B. 我必须立刻签到，因为它有手就行</h2><hr><p><a href="https://www.luogu.com.cn/problem/U236487">原题链接</a></p><p><strong>描述</strong></p><p>在算法竞赛的题目当中，有很多难度逆天的题，然鹅，也有个别的题肥肠煎蛋，像这种HFCJ一看就是”有手就行”的题目就被称之为<strong>签到题</strong>。</p><p>例如这道题目：<br>$$<br>f(x)&#x3D; \begin{aligned} \begin{cases} x^2 &amp;,0\le x\le 10\\ x\times f(x - 5) &amp;,10\lt x\le 50\\ x + f(x - 10) &amp;,50\lt x\le 100 \end{cases} \end{aligned}<br>$$<br><strong>输入格式</strong></p><p>第一行，输入一个整数 X<em>X</em>。</p><p><strong>输出格式</strong></p><p>一行，输出按照上述公式计算所得 X<em>X</em> 的结果。</p><p><strong>数据范围</strong></p><p>1000 ≤ <em>X</em> ≤ 100</p><p><strong>样例输入1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>样例输出1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>样例输入2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">11</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>样例输出2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">396</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>思想</strong>：</p><ul><li>签到题，考察递归函数。</li><li>计算后面的数较大，注意开<code>long long</code>。</li></ul><p><strong>C代码</strong>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"> </span><br><span class="line">LL <span class="title function_">f</span><span class="params">(LL x)</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(x &gt;=<span class="number">0</span> &amp;&amp; x &lt;= <span class="number">10</span>) <span class="keyword">return</span> x * x;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x &gt; <span class="number">10</span> &amp;&amp; x &lt;= <span class="number">50</span>) <span class="keyword">return</span> x * f(x - <span class="number">5</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> x + f(x - <span class="number">10</span>);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"> </span><br><span class="line">    LL x;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;x);</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,f(x));</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="C-OrzOrzOrz"><a href="#C-OrzOrzOrz" class="headerlink" title="C. OrzOrzOrz"></a>C. OrzOrzOrz</h2><hr><p><a href="https://www.luogu.com.cn/problem/U236489">原题链接</a></p><p><strong>描述</strong></p><p>河工院21级计算机学院和软件学院存在着许许多多的大佬，这些大佬都是LYS所膜拜的对象，他们分别是：陈佬(C) ，郭佬(G)，皇甫爷(H)，金佬(J)，李佬(L)，魏佬(W)，邢佬(X)，毅佬(Y)，朱佬(Z) 等等诸多大佬（<strong>以上排名不分先后，未列出亦视为大佬</strong>），由于这些大佬经常水群，所以大家对这些大佬耳熟能详。</p><p>每次见到这些大佬在群里出现，LYS就会膜拜一番，发出“OrzOrzOrz”的消息，对于未列出的大佬出现，LYS见到了只敢在心中膜拜，<strong>不敢发消息</strong>。</p><p>一天结束，LYS想要统计今天见到的大佬的次数，可统计实在是个大工程，令LYS肥肠困扰，你能帮助他进行统计吗？</p><p><strong>输入格式</strong></p><p>第一行输入两个整数 <em>N</em> 和 <em>M</em>，代表大佬出现 <em>N</em> 次和 <em>M</em> 次询问。</p><p>第二行输入 <em>N</em> 个大写字母 (<em>A</em>∼<em>Z</em>)，代表出现的大佬的编号。</p><p>接下来 <em>M</em> 行，每行输入一个大写字母 (<em>A</em>∼<em>Z</em>)，代表询问的大佬编号。</p><p><strong>输出格式</strong></p><p>对于每次询问：</p><p>第一行输出询问编号的大佬出现的次数，若该编号的大佬是上述列出的大佬且出现过，则输出一个空格后输出”OrzOrzOrz”（不加引号）。</p><p><strong>数据范围</strong></p><p>0 ≤ <em>N</em> ≤ 104</p><p>11 ≤ <em>M</em> ≤ 26</p><p><strong>样例输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">12 6</span><br><span class="line">D N F H L H W Z A W H J</span><br><span class="line">C</span><br><span class="line">Z</span><br><span class="line">W</span><br><span class="line">A</span><br><span class="line">J</span><br><span class="line">H</span><br></pre></td></tr></table></figure><p><strong>样例输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">1 OrzOrzOrz</span><br><span class="line">2 OrzOrzOrz</span><br><span class="line">1</span><br><span class="line">1 OrzOrzOrz</span><br><span class="line">3 OrzOrzOrz</span><br></pre></td></tr></table></figure><p><strong>思想</strong>：</p><ul><li>只有询问的大佬编号是列出的大佬才会发出 “OrzOrzOrz”。</li><li>利用<code>int vis[N]</code>初始化标记，<code>vis[i]</code>表示<code>i</code>是否是列出的大佬。</li><li>利用<code>int st[N]</code>记录大佬出现的次数。</li><li>询问时通过<code>vis[op[0]]</code>的状态来判断是否是列出的大佬。</li><li>注意C语言<code>scanf()</code>读入。</li></ul><p><strong>C代码</strong>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> st[N];  <span class="comment">//记录大佬出现次数</span></span><br><span class="line">    <span class="type">int</span> vis[N];  <span class="comment">//标记大佬</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="string">&#x27;A&#x27;</span>; i &lt;= <span class="string">&#x27;Z&#x27;</span>; i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="string">&#x27;C&#x27;</span> || i == <span class="string">&#x27;G&#x27;</span> || i == <span class="string">&#x27;H&#x27;</span> || i == <span class="string">&#x27;J&#x27;</span> || i == <span class="string">&#x27;L&#x27;</span> || i == <span class="string">&#x27;W&#x27;</span> || i == <span class="string">&#x27;X&#x27;</span> || i == <span class="string">&#x27;Y&#x27;</span> || i == <span class="string">&#x27;Z&#x27;</span>) vis[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> vis[i] = <span class="number">0</span>;</span><br><span class="line">        st[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)&#123;</span><br><span class="line">        <span class="type">char</span> op[<span class="number">10</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, op);  <span class="comment">//这里读入把空格过滤掉，防止读入奇奇怪怪的东西</span></span><br><span class="line">        st[*op] ++;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i ++)&#123;</span><br><span class="line">        <span class="type">char</span> op[<span class="number">10</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, op);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span>(vis[*op] &amp;&amp; st[*op]) <span class="built_in">printf</span>(<span class="string">&quot;%d OrzOrzOrz\n&quot;</span>, st[*op]);  <span class="comment">//*op 等价于 op[0]</span></span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, st[*op]);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>C++代码</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;-----&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line">map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">char</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x == <span class="string">&#x27;C&#x27;</span> || x == <span class="string">&#x27;G&#x27;</span> || x == <span class="string">&#x27;H&#x27;</span> || x == <span class="string">&#x27;J&#x27;</span> || x == <span class="string">&#x27;L&#x27;</span> || x == <span class="string">&#x27;W&#x27;</span> || x == <span class="string">&#x27;X&#x27;</span> || x == <span class="string">&#x27;Y&#x27;</span> || x == <span class="string">&#x27;Z&#x27;</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line"><span class="type">char</span> a;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">mp[a]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="type">char</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span>(mp[x] &amp;&amp; <span class="built_in">check</span>(x)) <span class="built_in">printf</span>(<span class="string">&quot;%d OrzOrzOrz\n&quot;</span>,mp[x]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(mp[x]) cout &lt;&lt; mp[x] &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line"><span class="comment">// cin &gt;&gt; T;</span></span><br><span class="line">T = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(T--) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="D-红心诡计"><a href="#D-红心诡计" class="headerlink" title="D. 红心诡计"></a>D. 红心诡计</h2><hr><p><a href="https://www.luogu.com.cn/problem/U236492">原题链接</a></p><p><strong>描述</strong></p><p>Vainglory（虚荣）是由Super Evil Megacorp开发的魔幻风格MOBA类手游，曾依靠超高质量的游戏画质和独特的“点触”操控，在全球收割了千万玩家的喜爱，借助独家的游戏渲染引擎，这款风靡全球的游戏亦曾两度被Apple公司选作Iphone的性能演示宣传片，由该团队首席环境艺术设计师EvilOnTheInside绘制的地图令人着迷。除此之外，独具特色的操控和精心设计的英雄角色，也令Vainglory在MOBA竞技史上给所有人留下了深刻的印象。</p><p><img src="https://lys2021.com/wp-content/uploads/2022/09/QQ%E5%9B%BE%E7%89%8720220806094114.png" alt="img"></p><p>可惜的是，由于Vainglory独特的操控模式上手难度极大，以及种种运营不善等原因，导致这款曾经的现象级的游戏在2020年停止了运营，但停服之后，仍有大量热爱Vainglory的玩家活跃在社区服，LYS也不例外。</p><p>LYS肥肠喜欢使用剑客黑羽这名角色，因为他不但有爆发性的刺客输出，也有一定的拉扯和扛伤能力，同时还兼具免控与位移为一体的高机动性技能，使得他在单体和团战都能发挥强大的作用。</p><p>其中，该英雄的一技能”红心诡计”描述如图：</p><p><img src="https://lys2021.com/wp-content/uploads/2022/09/QQ%E5%9B%BE%E7%89%8720220806095033.png" alt="img"></p><p><strong>例如</strong>：对于某一次正在发生的团战，LYS的黑羽已经将”红心诡计“升至了 5 级，满级的黑羽基础物理普通攻击的伤害是160，且身上的装备为其提供了 50 点物理强度和 300 点法术强度。</p><p>此时LYS遇到了一名敌人，该敌人当前生命值为 500，生命值上限为 2800，他<strong>在敌人到达技能释放范围内时</strong>，发动了”红心诡计“，<strong>迅速位移至敌人位置</strong>对其施加了满层的“震颤红心”并造成伤害，击杀了敌人并<strong>刷新了“红心诡计”的冷却时间</strong>，其伤害计算如下：</p><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220927083509286.png" alt="image-20220927083509286"></p><p><strong>已知：</strong></p><p>当前LYS已经将”红心诡计“升至了 5 级，且黑羽的等级已达到最大，其基础物理普通攻击的伤害是 160160。</p><p><strong>求：</strong>敌人原地挂机不动，LYS是否可以操作黑羽，在 (<em>X</em>,<em>Y</em>) 处选择任意一个在技能范围 <em>D</em> 之内的敌人开始，使用“红心诡计”位移到其身边击杀敌人并刷新技能，然后选择下一个敌人，如此重复，直到击杀所有的 5 名敌人。若”红心诡计”的范围内不存在敌人或使用一次”红心诡计“无法击杀敌人，LYS将<strong>停止后续的操作</strong>。</p><p><strong>输入格式</strong></p><p>第一行 5 个数，分别为黑羽装备的<strong>物理强度</strong> <em>AD</em>，<strong>法术强度</strong> <em>AP</em>，黑羽目前的位置横坐标 <em>X</em> 和纵坐标 <em>Y</em>，以及以 (<em>X</em>,<em>Y</em>) 为中心的”红心诡计“<strong>释放范围半径</strong> <em>D</em>。</p><p>接下来 55 行，每行四个数，分别为敌人当前所剩的生命值 <em>L</em>，生命上限 <em>R</em>，以及其位置的横坐标 <em>x</em> 和纵坐标 <em>y</em>.</p><p><strong>输出格式</strong></p><p>第一行，若可以击杀全部敌人，输出”YES“，否则输出”NO“。</p><p>若为”NO”，第二行额外输出一个整数，表示最大击杀数。</p><p><strong>数据范围</strong></p><p>$ 0\le AD,AP,D\le10000 $</p><p>$ -1000\le X,Y,x,y\le 1000 $</p><p>$ 1\le L\le R\le5000 $</p><p><strong>样例输入1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">50 200 0 0 3</span><br><span class="line">200 1500 0 3</span><br><span class="line">800 4000 2 2</span><br><span class="line">100 1200 1 1</span><br><span class="line">500 3900 3 0</span><br><span class="line">600 4400 4 3</span><br></pre></td></tr></table></figure><p><strong>样例输出1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>样例输入2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">100 30 -1 1 4.2</span><br><span class="line">1500 1900 1.2 0.8</span><br><span class="line">140.9 892.6 3.1 2.2</span><br><span class="line">230 556.9 4.4 -1</span><br><span class="line">530 2799.2 -2.5 -2</span><br><span class="line">462.6 3784 2.9 -1.1</span><br></pre></td></tr></table></figure><p><strong>样例输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>提示</strong></p><p>对于样例 11，可行的情况为从(0,0) 开始，先击杀 (0,3) 刷新了技能，然后击杀 (1,1) 再次刷新技能，接着击杀 (3,0)，(2,2)，(4,3) 或者从 (0,0) 开始，先击杀 (3,0) 刷新了技能，然后击杀 (1,1) 再次刷新技能，接着击杀 (0,3)，(2,2)，(4,3)。</p><p><strong>思想1</strong>：</p><ul><li><p>由题意可知，要求从(<em>X</em>,<em>Y</em>)开始，在D<em>D</em>范围内，可以任意选择一个(<em>x</em>,<em>y</em>)位置的敌人，如果可以将其击杀，则可以将(<em>X</em>,<em>Y</em>)更新为(<em>x</em>,<em>y</em>)，继续寻找在其D<em>D</em>范围内的敌人击杀，直至D<em>D</em>范围内没有敌人，或下一次无法击杀敌人。</p></li><li><p>对于本题，敌人数量只有</p><p>55</p><p>，可以暴力枚举：</p><ul><li>第一层循环枚举敌人<code>i</code>，判断<code>(X,Y)</code>是否与<code>(x[i],y[i])</code>距离小于<code>d</code>，且若可以将其击杀，则进入下一层循环。</li><li>在下一层循环开始前，我们利用<code>int vis[N]</code>，<code>vis[i]</code>来标记<code>i</code>号敌人已经被击杀，以后不再枚举<code>i</code>，用<code>cnt</code>记录击杀数。</li><li>第二层循环枚举敌人<code>j</code>，判断<code>(x[i],y[i])</code>是否与<code>(x[j],y[j])</code>距离小于<code>d</code>，且若可以将其击杀，则进入下一层循环。</li><li>在下一层循环开始前，标记<code>vis[j]</code>，且<code>cnt ++</code>。</li><li>第三层循环枚举敌人<code>q</code>，判断<code>(x[j],y[j])</code>是否与<code>(x[q],y[q])</code>距离小于<code>d</code>，且若可以将其击杀，则进入下一层循环。</li><li>在下一层循环开始前，标记<code>vis[q]</code>，且<code>cnt ++</code>。</li><li>\dots…</li><li>直到枚举到最后一个敌人，在每一层循环退出之后更新 <code>res</code>，还要将敌人和击杀数恢复为上一层的进入状态。</li></ul></li></ul><p><strong>C语言代码</strong>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//check函数判断是否满足继续的条件</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">check</span><span class="params">(<span class="type">double</span> x1, <span class="type">double</span> y1, <span class="type">double</span> x2, <span class="type">double</span> y2, <span class="type">double</span> d, <span class="type">double</span> l, <span class="type">double</span> r, <span class="type">double</span> ap,<span class="type">double</span> ad)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) &lt;= d * d)&#123;</span><br><span class="line">        <span class="keyword">if</span>(l &lt;= (r - l) * <span class="number">0.25</span> + ap * <span class="number">0.5</span> + <span class="number">240</span> + <span class="number">160</span> + ad) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> <span class="title function_">check</span><span class="params">(<span class="type">double</span> x1, <span class="type">double</span> y1, <span class="type">double</span> x2, <span class="type">double</span> y2, <span class="type">double</span> d, <span class="type">double</span> l, <span class="type">double</span> r, <span class="type">double</span> ap,<span class="type">double</span> ad)</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="type">double</span> ap, ad, X, Y, d;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf %lf %lf&quot;</span>, &amp;ad, &amp;ap, &amp;X, &amp;Y, &amp;d);</span><br><span class="line"> </span><br><span class="line">    <span class="type">double</span> l[<span class="number">10</span>], r[<span class="number">10</span>], x[<span class="number">10</span>], y[<span class="number">10</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i ++) <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf %lf&quot;</span>, &amp;l[i], &amp;r[i], &amp;x[i], &amp;y[i]);</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;  <span class="comment">//res存储可以击杀的最大敌人数量</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i ++)&#123;  <span class="comment">//第一层循环，判断从(X,Y)开始能否击杀 i 号敌人</span></span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>; <span class="comment">//表示当前击杀数</span></span><br><span class="line">        <span class="keyword">if</span>(check(X, Y, x[i], y[i], d, l[i], r[i], ap, ad) &lt; <span class="number">0</span>) <span class="keyword">continue</span>;  <span class="comment">//不能击杀则跳过</span></span><br><span class="line">         <span class="comment">//能击杀 i</span></span><br><span class="line">        <span class="type">int</span> vis[<span class="number">10</span>];  <span class="comment">//vis[*]存储第 * 号敌人是否已经击杀</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">1</span>; k &lt;= <span class="number">5</span>; k ++) vis[k] = <span class="number">0</span>; <span class="comment">//初始化全部敌人未击杀</span></span><br><span class="line">        vis[i] = <span class="number">1</span>;  <span class="comment">//标记 i 已经被击杀 </span></span><br><span class="line">        cnt ++;  <span class="comment">//击杀数加一</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">5</span>; j ++)&#123;  <span class="comment">//第二层循环，判断击杀 i 后，剩下的敌人 j 是否可以击杀</span></span><br><span class="line">            <span class="keyword">if</span>(vis[j] || check(x[i], y[i], x[j], y[j], d, l[j], r[j], ap, ad) &lt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">             <span class="comment">//能击杀 j</span></span><br><span class="line">            vis[j] = <span class="number">1</span>;  <span class="comment">//标记 j 已经被击杀 </span></span><br><span class="line">            cnt ++;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> q = <span class="number">1</span>; q &lt;= <span class="number">5</span>; q ++)&#123;  <span class="comment">//第三层循环，判断击杀 j 后，剩下的敌人 q 是否可以击杀</span></span><br><span class="line">                <span class="keyword">if</span>(vis[q] || check(x[j], y[j], x[q], y[q], d, l[q], r[q], ap, ad) &lt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                vis[q] = <span class="number">1</span>;</span><br><span class="line">                cnt ++;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> w = <span class="number">1</span>; w &lt;= <span class="number">5</span>; w ++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(vis[w] || check(x[q], y[q], x[w], y[w], d, l[w], r[w], ap, ad) &lt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                    vis[w] = <span class="number">1</span>;</span><br><span class="line">                    cnt ++;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> e = <span class="number">1</span>; e &lt;= <span class="number">5</span>; e ++)&#123;  <span class="comment">//最后一个循环，判断第五个敌人是否可以击杀</span></span><br><span class="line">                        <span class="keyword">if</span>(vis[e] || check(x[w], y[w], x[e], y[e], d, l[e], r[e], ap, ad) &lt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                        vis[e] = <span class="number">1</span>;</span><br><span class="line">                        cnt ++;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                      <span class="comment">//结束每一层的循环后</span></span><br><span class="line">                    res = res &gt; cnt ? res : cnt;  <span class="comment">//更新最大击杀数</span></span><br><span class="line">                    vis[w] = <span class="number">0</span>;  <span class="comment">//恢复原有的敌人状态（变为未击杀）</span></span><br><span class="line">                    cnt --;  <span class="comment">//恢复击杀数</span></span><br><span class="line">                &#125;</span><br><span class="line">                res = res &gt; cnt ? res : cnt;</span><br><span class="line">                vis[q] = <span class="number">0</span>;</span><br><span class="line">                cnt --;</span><br><span class="line">            &#125;</span><br><span class="line">            res = res &gt; cnt ? res : cnt;</span><br><span class="line">            vis[j] = <span class="number">0</span>;</span><br><span class="line">            cnt --;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        res = res &gt; cnt ? res : cnt;  <span class="comment">//最后的更新</span></span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(res == <span class="number">5</span>) <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;NO\n%d\n&quot;</span>,res);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>思想2</strong>：</p><ul><li><code>DFS</code>搜索。</li><li>利用递归的每一层代替暴力循环嵌套。</li></ul><p><strong>另一种暴力搜索的思路</strong>：</p><ul><li>对所有的敌人击杀顺序的组合进行全排列，依次判断每一种排列组合的最大击杀数。</li></ul><p><strong>C++代码</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">double</span> x1, <span class="type">double</span> y1, <span class="type">double</span> x2, <span class="type">double</span> y2, <span class="type">double</span> d, <span class="type">double</span> l, <span class="type">double</span> r, <span class="type">double</span> ap,<span class="type">double</span> ad)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) &lt;= d * d)&#123;</span><br><span class="line">        <span class="keyword">if</span>(l &lt;= (r - l) * <span class="number">0.25</span> + ap * <span class="number">0.5</span> + <span class="number">240</span> + <span class="number">160</span> + ad) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">point</span>&#123;</span><br><span class="line">    <span class="type">double</span> l, r, x, y;</span><br><span class="line">&#125;p[<span class="number">10</span>];</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> res;</span><br><span class="line"> </span><br><span class="line"><span class="type">bool</span> vis[<span class="number">10</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">double</span> xx, <span class="type">double</span> yy, <span class="type">double</span> d, <span class="type">double</span> ap,<span class="type">double</span> ad, <span class="type">int</span> u)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i] &amp;&amp; <span class="built_in">check</span>(xx, yy, p[i].x, p[i].y, d, p[i].l, p[i].r, ap, ad))&#123;</span><br><span class="line">            vis[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(p[i].x, p[i].y, d, ap, ad, u + <span class="number">1</span>);</span><br><span class="line">            vis[i] = <span class="number">0</span>;  <span class="comment">//恢复状态</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    res = <span class="built_in">max</span>(res, u);  <span class="comment">//更新击杀数</span></span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="type">double</span> ad, ap, X, Y, d;</span><br><span class="line"> </span><br><span class="line">    cin &gt;&gt; ad &gt;&gt; ap &gt;&gt; X &gt;&gt; Y &gt;&gt; d;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i ++)&#123;</span><br><span class="line">        <span class="type">double</span> l, r, x, y;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        p[i] = &#123;l, r, x, y&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i ++)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span> vis);  <span class="comment">//初始化标记</span></span><br><span class="line">        <span class="built_in">dfs</span>(X, Y, d, ap, ad, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(res == <span class="number">5</span>) cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="E-不要停下来啊！！！"><a href="#E-不要停下来啊！！！" class="headerlink" title="E. 不要停下来啊！！！"></a>E. 不要停下来啊！！！</h2><hr><p><a href="https://www.luogu.com.cn/problem/U236495">原题链接</a></p><p><strong>描述</strong></p><p>新的学期开始了，我们的奥尔加团长又一次嘱托我们，无论以后学习遇到什么困难，都请记住：“不要停下来啊！！！”</p><p><img src="https://lys2021.com/wp-content/uploads/2022/09/%E4%B8%8D%E8%A6%81%E5%81%9C%E4%B8%8B%E6%9D%A5%E5%95%8A.jpg" alt="img"></p><p><strong>输入格式</strong></p><p><strong>同样例输入</strong></p><p>第一行输入三个整数 N*,<em>M</em>,<em>K</em>，代表一个  <em>N</em>  行 <em>M</em> 列的二维数组和 K<em>K</em> 行坐标信息</p><p>接下来共 <em>K</em> 行，每行输入两个整数 <em>x</em>,<em>y</em>，对于二维数组 (<em>x</em>,<em>y</em>) 位置的点标记为”#”，未被标记的点记为”.”</p><p><strong>输出格式</strong></p><p><strong>同样例输出</strong>（注意每个字符间隔一个空格）</p><p><strong>样例输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">15 9 44</span><br><span class="line">0 2</span><br><span class="line">1 1</span><br><span class="line">2 1</span><br><span class="line">3 1</span><br><span class="line">3 3</span><br><span class="line">3 4</span><br><span class="line">4 1</span><br><span class="line">4 3</span><br><span class="line">4 4</span><br><span class="line">5 1</span><br><span class="line">5 2</span><br><span class="line">5 3</span><br><span class="line">5 4</span><br><span class="line">5 5</span><br><span class="line">5 6</span><br><span class="line">6 2</span><br><span class="line">6 3</span><br><span class="line">6 4</span><br><span class="line">6 5</span><br><span class="line">6 6</span><br><span class="line">7 2</span><br><span class="line">7 3</span><br><span class="line">7 4</span><br><span class="line">7 5</span><br><span class="line">7 6</span><br><span class="line">8 2</span><br><span class="line">8 3</span><br><span class="line">8 4</span><br><span class="line">8 5</span><br><span class="line">8 6</span><br><span class="line">9 3</span><br><span class="line">9 4</span><br><span class="line">9 6</span><br><span class="line">10 3</span><br><span class="line">10 5</span><br><span class="line">10 7</span><br><span class="line">11 3</span><br><span class="line">11 6</span><br><span class="line">12 3</span><br><span class="line">12 6</span><br><span class="line">13 3</span><br><span class="line">13 6</span><br><span class="line">14 3</span><br><span class="line">14 6</span><br></pre></td></tr></table></figure><p><strong>样例输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">. . # . . . . . .</span><br><span class="line">. # . . . . . . .</span><br><span class="line">. # . . . . . . .</span><br><span class="line">. # . # # . . . .</span><br><span class="line">. # . # # . . . .</span><br><span class="line">. # # # # # # . .</span><br><span class="line">. . # # # # # . .</span><br><span class="line">. . # # # # # . .</span><br><span class="line">. . # # # # # . .</span><br><span class="line">. . . # # . # . .</span><br><span class="line">. . . # . # . # .</span><br><span class="line">. . . # . . # . .</span><br><span class="line">. . . # . . # . .</span><br><span class="line">. . . # . . # . .</span><br><span class="line">. . . # . . # . .</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ul><li>该二维数组下标从 (0,0) 开始。</li></ul><p><strong>思想1</strong>：</p><ul><li>签到题，考察二维数组。</li></ul><p><strong>C代码1</strong>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="type">char</span> mp[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> n, m, k;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;n, &amp;m, &amp;k);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j ++)&#123;</span><br><span class="line">            mp[i][j] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; i ++)&#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">        mp[x][y] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j ++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c &quot;</span>,mp[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>思想2</strong>：</p><ul><li>样例输出即为答案，直接打表也可以。</li></ul><p><strong>C代码2</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. . # . . . . . .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. # . . . . . . .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. # . . . . . . .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. # . # # . . . .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. # . # # . . . .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. # # # # # # . .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. . # # # # # . .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. . # # # # # . .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. . # # # # # . .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. . . # # . # . .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. . . # . # . # .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. . . # . . # . .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. . . # . . # . .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. . . # . . # . .\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;. . . # . . # . .\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="F-反卷行动"><a href="#F-反卷行动" class="headerlink" title="F. 反卷行动"></a>F. 反卷行动</h2><hr><p><a href="https://www.luogu.com.cn/problem/U236496">原题链接</a></p><p><strong>描述</strong></p><p>众所周知，河工院的计算机学院和软件学院存在着许多大佬，这些大佬们每天最喜欢做的事情就是口口声声的称：”今天又是摆烂的一天，啥也没干”，其实背地里却是名副其实的”卷王”，私底下学了不少东西</p><p>LYS心中大惊Σ(っ °Д °;)っ！他说：“这样好吗？这不好！”</p><p>LYS深知卷王的可怕，靠近卷王的人迟早也会被卷王传染，进而也会变成卷王，如此下去，所有人都将被卷，这太可怕了！</p><p>可惜的是，变成卷王的人再也变不会原来的样子了，所以LYS只能尽可能的想办法守护还没有变成卷王的人。</p><p>为了顺利开展反卷行动，LYS以每一个寝室为单位进行守护，他发现寝室的排列整好是按照 1\sim N1∼<em>N</em> 的编号围成了一圈，并且他将有卷王存在的 M<em>M</em> 个宿舍都打上了标记。</p><p>已知有卷王存在的宿舍 $M<em>i经过一个夜晚的奋战，会将其相邻的两个宿舍（经过一个夜晚的奋战，会将其相邻的两个宿舍（M</em>{i-1}和和M_{i+1}）的人全部变成卷王（编号为）的人全部变成卷王（编号为M_N的宿舍相邻宿舍是的宿舍相邻宿舍是M<em>1和和M</em>{N-1}），LYS可以在夜晚降临之前据守在任意一个没有卷王存在的宿舍），<em>L<strong>Y</strong>S</em>可以在夜晚降临之前据守在任意一个没有卷王存在的宿舍M_j$，使其宿舍内的所有人获得“反卷之力”，获得“反卷之力”的宿舍在今晚不会被变成卷王，且以后也不会被变成卷王。</p><p>由于LYS太弱小了，他一天只能保护一个宿舍，但是LYS想要保护尽可能多的宿舍，因此他需要精心策划每一次的据点，由于LYS孤军奋战，他需要一个人帮他谋划据点宿舍的选择，你能帮帮他吗？</p><p><strong>输入格式</strong></p><p>第一行输入两个整数 N,M<em>N</em>,<em>M</em>，分别代表寝室最大编号和卷王宿舍的数量。</p><p>第二行 M<em>M</em> 个数，表示卷王宿舍的编号 m_i<em>m**i</em>。</p><p><strong>输出格式</strong></p><p>输出一个整数，输出最终没有被变成卷王的宿舍数量。</p><p><strong>数据范围</strong></p><p>$ 5\le N \le 10^9 $</p><p>$ 1\le M\le min(N,2\times 10^5) $</p><p>$ 1\le m_i\le N $</p><p><strong>样例输入1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6 2</span><br><span class="line">3 5</span><br></pre></td></tr></table></figure><p><strong>样例输出1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>样例输入2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">12 2</span><br><span class="line">8 2</span><br></pre></td></tr></table></figure><p><strong>样例输入2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>思想</strong>：</p><ul><li><p>贪心。</p></li><li><p>每次选择未被变成卷王（未被感染）宿舍的最长区间进行保护。</p></li><li><p>对于被保护的区间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[l,r]</span><br></pre></td></tr></table></figure><p>：</p><ul><li>经过第一天：</li><li>保护<code>[l,r]</code>的一个端点，设保护<code>a[l]</code>。</li><li><code>a[l]</code>不会感染，<code>a[r]</code>会被感染。</li><li>其他所有未受到保护的区间<code>[l&#39;,r&#39;]</code>里，<code>a[l&#39;]</code>和<code>a[r&#39;]</code>被感染。</li><li>经过第二天：</li><li>保护<code>[l,r]</code>的另一个端点<code>a[r]</code>，由于第一天<code>a[r]</code>被感染，故只能保护<code>a[r - 1]</code>。</li><li>其他所有未受到保护的区间<code>[l&#39;,r&#39;]</code>里，<code>a[l&#39; + 1]</code>和<code>a[r&#39; - 1]</code>被感染。</li><li>即对于选择保护的区间<code>[l,r]</code>，<code>a[r]</code>被感染，我们只能保护到<code>[l,r - 1]</code>这一段，且其余所有未受到保护的区间<code>[l&#39;,r&#39;]</code>里<code>a[l&#39;],a[r&#39;],a[l&#39; + 1],a[r&#39; - 1]</code>受到感染，感染后的区间变为<code>[l&#39; + 2, r&#39; - 2]</code>。</li></ul></li><li><p>综上可知，我们优先保护最长的未被变成卷王的区间，即可实现最优策略。</p></li><li><p>由于选择保护的区间端点可以任选，故只需要考虑区间长度，不需要维护额外的信息。</p></li><li><p>注意不要忽略首尾相连的区间。</p></li></ul><p><strong>注意</strong>：</p><ul><li>本题的数据卡掉了冒泡排序的可能性，选手可选择任意一种时间复杂度优于冒泡排序的方法进行处理。</li><li>以 <code>C++</code> 的 <code>sort()</code> 排序函数为例，给出如下代码1，以优先队列维护最长区间为例，给出如下代码2。</li><li><code>sort()</code> 用法参考：<a href="https://zh.cppreference.com/w/cpp/algorithm/sort"><code>std::sort</code></a>。</li></ul><p><strong>C++代码1</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e7</span> + <span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i ++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);  <span class="comment">//读入所有卷王的房间编号</span></span><br><span class="line"> </span><br><span class="line">    <span class="built_in">sort</span>(a, a + m);  <span class="comment">//将卷王房间的编号从小到大排序</span></span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> idx = <span class="number">0</span>;  <span class="comment">//idx作为被保护的区间数组b的下标</span></span><br><span class="line"> </span><br><span class="line">    b[idx ++] = n - a[m - <span class="number">1</span>] + a[<span class="number">0</span>] - <span class="number">1</span>;  <span class="comment">//将首尾相连的区间加入</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i ++) b[idx ++] = a[i + <span class="number">1</span>] - a[i] - <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">sort</span>(b, b + idx, <span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;()); <span class="comment">//将区间长度从大到小排序</span></span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; idx; i ++)&#123;</span><br><span class="line">        <span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(b[i] - i * <span class="number">4</span> &gt; <span class="number">0</span>)&#123;  <span class="comment">//完全保护好当前区间需要两天，则未被保护的区间由于两端均会被感染，故两天会损失4个宿舍</span></span><br><span class="line">            k = b[i] - i * <span class="number">4</span>;  <span class="comment">//经过i天后未被保护的区间在受到保护时剩下的还未变成卷王的区间长度</span></span><br><span class="line">            <span class="keyword">if</span>(k &gt; <span class="number">1</span>) k --;  <span class="comment">//两天里一天只能保护一端，另一端会被感染</span></span><br><span class="line">            res += k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,res);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>C++代码2</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line"> </span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"> </span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; vis;  <span class="comment">//vis存储最先被感染的房屋编号 </span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i ++)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        vis.<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">sort</span>(vis.<span class="built_in">begin</span>(),vis.<span class="built_in">end</span>());  <span class="comment">//将编号从小到大排序 </span></span><br><span class="line"> </span><br><span class="line">    priority_queue&lt;<span class="type">int</span>&gt; st;  <span class="comment">//优先队列维护当前最大长度的区间 </span></span><br><span class="line"> </span><br><span class="line">    st.<span class="built_in">push</span>(n - vis.<span class="built_in">back</span>() + vis[<span class="number">0</span>] - <span class="number">1</span>);  <span class="comment">//将首尾相连的区间长度加入 </span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i + <span class="number">1</span> &lt; vis.<span class="built_in">size</span>(); i ++)&#123;</span><br><span class="line">        st.<span class="built_in">push</span>(vis[i + <span class="number">1</span>] - vis[i] - <span class="number">1</span>);  <span class="comment">//将未感染的区间的长度加入 </span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;  <span class="comment">//存储未感染的区间长度 </span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i + <span class="number">1</span> &gt; <span class="number">0</span>; i ++)&#123;  <span class="comment">//i代表天数 </span></span><br><span class="line">        <span class="keyword">if</span>(!st.<span class="built_in">empty</span>() &amp;&amp; st.<span class="built_in">top</span>() - i * <span class="number">4</span> &gt; <span class="number">0</span>)&#123;  <span class="comment">//经过一天，下一个区间长度 -4 </span></span><br><span class="line">            <span class="type">int</span> k = st.<span class="built_in">top</span>() - i * <span class="number">4</span>;  <span class="comment">//设k为当前区间经过i天后未感染的区间长度 </span></span><br><span class="line">            <span class="keyword">if</span>(k &gt; <span class="number">1</span>) k --;  <span class="comment">//对于一个端点的保护，会使另一个端点被感染(长度-1)，若区间长度仅为1，则只能保护1长度 </span></span><br><span class="line">            cnt += k;  <span class="comment">//累计保护到的区间长度 </span></span><br><span class="line">            st.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="G-机器人OR寄器人"><a href="#G-机器人OR寄器人" class="headerlink" title="G. 机器人OR寄器人"></a>G. 机器人OR寄器人</h2><hr><p><a href="https://www.luogu.com.cn/problem/U236497">原题链接</a></p><p><strong>描述</strong></p><p>随着新学期的开始，HFCJ学长准备开发一个可以接收指令从而行动的机器人，现在硬件部分的设计已经解决，只剩下编辑指令和处理的部分。可是这种小事对他来说太简单了，用他的原话说就是：”有手就行”，于是他就懒得继续做下去了。</p><p>HFCJ把这个做了一半的机器人丢给了LYS，如果他能完成剩余的工作，并且成品能够通过测试，那么这个机器人就归LYS辣。</p><p>以下是待完成的任务要求：</p><ul><li>要求能够存储多个指令，在测试时执行对应编号的指令</li><li>添加指令：输入一个整数 P<em>P</em>，表示添加的指令编号，然后输入两个整数 x,y<em>x</em>,<em>y</em>，作为执行信息存储。</li><li>执行指令：输入一个整数 Q<em>Q</em>，表示执行的指令编号，然后执行该指令的信息 x_q,y_q<em>x**q</em>,<em>y**q</em>，使得机器人从原位置 (X,Y)(<em>X</em>,<em>Y</em>) 移动到 (X+x_q,Y+y_q)(<em>X</em>+<em>x**q</em>,<em>Y</em>+<em>y**q</em>)。</li></ul><p>LYS肥肠想要这个机器人，可是他啥也不会，现在他来找你帮忙了，你能帮帮他吗？</p><p><strong>输入格式</strong></p><p>第一行输入四个整数 N*,<em>M</em>,<em>X</em>,<em>Y</em>，分别表示添加 <em>N</em> 个指令和 <em>M</em> 次执行，以及机器人的起始坐标(<em>X</em>,<em>Y</em>)。</p><p>接下来 N<em>N</em> 行，第 i*(1∼<em>N</em>) 行输入两个整数 x<strong>i</strong>,y<strong>i</strong>，表示 i<em>i</em> 号指令的执行信息。</p><p>然后一行，输入 <em>M</em> 个整数，M<strong>i</strong> 为执行的指令编号。</p><p><strong>输出格式</strong></p><p>一行，输出两个整数，表示执行完所有指令后机器人的坐标。</p><p><strong>数据范围</strong></p><p>1≤<em>N</em>,<em>M</em>≤1000</p><p>−1000≤<em>X</em>,<em>Y</em>,<em>x</em>,<em>y</em>≤1000</p><p><strong>样例输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3 4 0 0</span><br><span class="line">1 1</span><br><span class="line">-1 -1</span><br><span class="line">2 2</span><br><span class="line">1 3 2 2</span><br></pre></td></tr></table></figure><p><strong>样例输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 1</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>思想</strong>：</p><ul><li>构造偏移量数组<code>dx[N],dy[N]</code>，存储编号的信息。</li><li>执行指令编号为<code>q</code>，则使<code>X</code>和<code>Y</code>加上对应编号的偏移量，即<code>X += dx[q], Y += dy[q]</code>。</li></ul><p><strong>C代码</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> dx[<span class="number">1010</span>], dy[<span class="number">1010</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> n, m, X, Y;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;n, &amp;m, &amp;X, &amp;Y);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;dx[i], &amp;dy[i]);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i ++)&#123;</span><br><span class="line">        <span class="type">int</span> q;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q);</span><br><span class="line">        X += dx[q];</span><br><span class="line">        Y += dy[q];</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, X, Y);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="H-帕秋莉GO！！！"><a href="#H-帕秋莉GO！！！" class="headerlink" title="H. 帕秋莉GO！！！"></a>H. 帕秋莉GO！！！</h2><hr><p><a href="https://www.luogu.com.cn/problem/U236498">原题链接</a></p><p><strong>描述</strong></p><p>众嗦粥汁，帕秋莉·诺蕾姬是《东方Project》系列弹幕游戏及其衍生作品的登场角色之一。</p><p>她是大小姐蕾米莉亚的好朋友，是个大概有100岁的魔女。她居住在幻想乡中藏书最多的大图书馆——红魔馆地下图书馆中。喜欢读书，并且会使用七曜魔法。</p><p>贤者（Philosopher）的另一个意思是哲学家，因此也可称她为七曜的哲学家。平常总待在大图书馆里的她，患有哮喘、贫血，体质虚弱，因此在肉搏战中非常劣势。</p><p>在比利王客串的兄贵本篇TalesFromTheFoxhole里，作为军官的比利对于下属的小兵在休息时间感到不满而发出的“Attention on”因为音质问题常被空耳成“帕秋莉GO”。</p><p><img src="https://lys2021.com/wp-content/uploads/2022/09/47798852_p0.jpg" alt="img"></p><p>由于某种不可知的异变，姆Q穿越到了知名演员野兽仙贝的家中，这名不谙世事的马猴烧酒头一次从红魔馆的地下走出，没想到居然会收获颇丰，她在野兽仙贝的激情指导下学习到了她从未见识过的膜法，只不过由于哮喘的原因，导致她无法将这强大的咒语一次性咏唱完毕。</p><p>我们的姆Q非常困扰，她决定将这条强大的咒语告诉你，想借助科学的力量完成咏唱，你能帮帮她吗？</p><p>咒语：持续进行咏唱“114514”直到达到“1919“次。</p><p><strong>输入格式</strong></p><p>无。</p><p><strong>输出格式</strong></p><p>每行输出”114514”（不包含引号），共输出1919行。</p><p><strong>思想</strong>：</p><ul><li>签到题，考察循环结构。</li></ul><p><strong>C代码</strong>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1919</span>; i ++) <span class="built_in">printf</span>(<span class="string">&quot;114514\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>本篇题解转自A哥的博客</strong></p><p><a href="https://lys2021.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E9%99%A22022%E7%BA%A7%E6%96%B0%E7%94%9F%E5%91%A8%E8%B5%9B%EF%BC%88%E4%B8%80%EF%BC%89/">计算机学院2022级新生周赛（一）题解 – -HAUE_LYS- (lys2021.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;A-Hello-HAUE&quot;&gt;&lt;a href=&quot;#A-Hello-HAUE&quot; class=&quot;headerlink&quot; title=&quot;A. Hello , HAUE&quot;&gt;&lt;/a&gt;A. Hello , HAUE&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://ww</summary>
      
    
    
    
    <category term="A哥的邀请赛" scheme="http://example.com/categories/A%E5%93%A5%E7%9A%84%E9%82%80%E8%AF%B7%E8%B5%9B/"/>
    
    
    <category term="A哥的邀请赛" scheme="http://example.com/tags/A%E5%93%A5%E7%9A%84%E9%82%80%E8%AF%B7%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>无向图的最小环问题</title>
    <link href="http://example.com/2022/09/24/%E6%97%A0%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%B0%8F%E7%8E%AF%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2022/09/24/%E6%97%A0%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%B0%8F%E7%8E%AF%E9%97%AE%E9%A2%98/</id>
    <published>2022-09-24T00:26:57.000Z</published>
    <updated>2022-09-24T08:54:29.562Z</updated>
    
    <content type="html"><![CDATA[<h3 id="无向图的最小环问题"><a href="#无向图的最小环问题" class="headerlink" title="无向图的最小环问题"></a>无向图的最小环问题</h3><h4 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h4><p><a href="https://www.acwing.com/problem/content/346/">344. 观光之旅 - AcWing题库</a></p><h4 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h4><p>给定一张无向图，求图中一个至少包含 33 个点的环，环上的节点不重复，并且环上的边的长度之和最小。</p><p>你需要输出最小环的方案，若最小环不唯一，输出任意一个均可。</p><p>####数据范围</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 ≤ N ≤ 100</span><br><span class="line">1 ≤ M ≤ 10000</span><br><span class="line">1 ≤ l &lt; 500</span><br></pre></td></tr></table></figure><p>此类问题叫做无向图的最小环问题 可以用floyd解决</p><h4 id="Floyd（O-n-3）"><a href="#Floyd（O-n-3）" class="headerlink" title="Floyd（O n^3）"></a>Floyd（O n^3）</h4><p>这里主要来讲一下利用Floyd求解的具体原理</p><p>要想用Floyd求解无向图最小环问题，我们首先要深入里了解Floyd每一步的意义。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=n;k++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">dis[i][j] = <span class="built_in">min</span>(dis[i][j],dis[i][k]+dis[k][j]</span><br></pre></td></tr></table></figure><p>为什么Floyd可以求解最小环呢</p><p>虑一个图中的最小环 <strong>&#x2F; u-v-k-u &#x2F;</strong></p><p>如果我们随意去掉其中一条边 <strong>&#x2F; u-v &#x2F;</strong></p><p>那么剩下的 <strong>&#x2F; v-k-u &#x2F;</strong> 一定是图中 <strong>( u , v )</strong> 间的最短路径</p><p>那么这怎么和Floyd算法联系呢？</p><p>我们知道，</p><p><strong>在Floyd算法枚举 ki 的时候，已经得到了前 k-1 个点的最短路径，这 k-1 个点不包括点 k，并且他们的最短路径中也不包括 k 点}这 k-1 个点不包括点 k，并且他们的最短路径中也不包括 k 点</strong></p><p>那么我们便可以从这前 k-1 个点中选出两个点 <strong>i , j</strong> 来</p><p>因为 <strong>&#x2F; i-j &#x2F;</strong> 已经是 <strong>( i , j )</strong> 间的最短路径，且这个路径不包含 <strong>k</strong> 点</p><p><strong>注解：这里 &#x2F; i-j &#x2F; 这样表达只是为了直观，实际中 ( i , j ) 间的最短路很可能不仅仅只有 &#x2F; i-j &#x2F; ，还有可能会有其他点，但是这条路径一定是 ( i , j ) 间的最短路</strong></p><p>所以连接 <strong>&#x2F; i-j-k-i &#x2F;</strong> ，我们就得到了一个经过 <strong>i , j , k</strong> 的最小环</p><h4 id="记录路径"><a href="#记录路径" class="headerlink" title="记录路径"></a>记录路径</h4><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">设环的形式是：i&lt;-&gt;k&lt;-&gt;j , i&lt;--&gt;j （i,j,k不同） </span><br><span class="line">floyd是典型的插点算法，每次插入点k，为此，在点k被[插入前]可计算i-j-k这个环</span><br><span class="line">即此时中间节点为：1~k-1，即我们已经算出了任意i&lt;-&gt;j的最短道路，中间经过的节点可以为 (1,2,3,...,k-1)</span><br><span class="line">我们只需枚举所有以k为环中最大节点的环即可。</span><br><span class="line"></span><br><span class="line">pos[i][j]:i~j的最短路中经过的点是k(即由这个状态转移过来)，且这个k是此路径中编号最大的点(除i,j)//根据Floyd算法实质决定</span><br><span class="line">这条道路存在以下两条性质</span><br><span class="line">1.在i~j的最短道路中，一定没有环(显然)</span><br><span class="line">2.设i,j之间的最短道路经过点k(不同于i,j)，则i~k , k~j之间必然没有交集</span><br><span class="line"></span><br><span class="line">2证：</span><br><span class="line">如果有交集,设交点为k&#x27;(k&#x27; &lt; k,根据Floyd算法实质相关)，则存在道路：</span><br><span class="line">i&lt;-&gt;k&#x27;&lt;-&gt;j , 由于[i&lt;-&gt;k&#x27;] &lt; [i&lt;-&gt;k] , [j-&gt;k&#x27;] &lt; [j-&gt;k] </span><br><span class="line">显然这条道路更小，和假设矛盾所以一定没有交集</span><br><span class="line"></span><br><span class="line">对于pos[i][j]，如果pos[i][j] == 0 : 说明i~j的最短路没有经过其他节点</span><br><span class="line"></span><br><span class="line">因此借用性质2来求解道路，注意书写顺序，确保最后输出顺序正确</span><br><span class="line">每次把i &lt;-&gt; j 之间划分成 i&lt;-&gt;k , k&lt;-&gt;j</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span> , INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">int</span> d[N][N],g[N][N];</span><br><span class="line"><span class="type">int</span> path[N] , cnt;</span><br><span class="line"><span class="type">int</span> pos[N][N];<span class="comment">//记录当时状态由哪个点转移过来</span></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="comment">//递归处理环上节点</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_path</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pos[i][j] == <span class="number">0</span>) <span class="keyword">return</span>; <span class="comment">//i到j的最短路没有其他节点</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> k = pos[i][j]; <span class="comment">//记录当前节点k , 将i,j分成两部分，i -&gt; k -&gt; j 分成两部分递归处理</span></span><br><span class="line">    <span class="built_in">get_path</span>(i, k);</span><br><span class="line">    path[cnt ++ ] = k;</span><br><span class="line">    <span class="built_in">get_path</span>(k, j);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">memset</span>(g,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> g);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++) g[i][i] = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (m -- )&#123;</span><br><span class="line">            <span class="type">int</span> a ,b, c;</span><br><span class="line">            cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">            g[a][b] = g[b][a] = <span class="built_in">min</span>(g[a][b] ,c);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="type">int</span> res = INF;</span><br><span class="line">    <span class="built_in">memcpy</span>(d,g,<span class="keyword">sizeof</span> d); <span class="comment">//原图</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//Floyd</span></span><br><span class="line">    <span class="comment">// dp思路, 假设k是环上的最大点, i ~ k ~ j(Floyd的思想)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= n; k ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//至少包含3个点的环所经过的点的最大标号是k</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; k; i ++ )</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; k; j ++ )</span><br><span class="line">            <span class="comment">// 由于是无向图,</span></span><br><span class="line">            <span class="comment">// ij调换其实是跟翻转图一样的道理</span></span><br><span class="line">            <span class="comment">// 直接剪枝, j从i + 1开始就好了</span></span><br><span class="line">            <span class="comment">// 更新最小环, 记录一下路径</span></span><br><span class="line">                <span class="keyword">if</span> ((<span class="type">long</span> <span class="type">long</span>)d[i][j] + g[j][k] + g[k][i] &lt; res)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 注意,每当迭代到这的时候, </span></span><br><span class="line">                    <span class="comment">// d[i][j]存的是上一轮迭代Floyd得出的结果</span></span><br><span class="line">                    <span class="comment">// d[i][j] : i ~ j 中间经过不超过k - 1的最短距离(k是不在路径上的)</span></span><br><span class="line">                    res = d[i][j] + g[j][k] + g[k][i];</span><br><span class="line">                    cnt = <span class="number">0</span>;</span><br><span class="line">                    path[cnt ++ ] = k; <span class="comment">//先放k</span></span><br><span class="line">                    path[cnt ++ ] = i; <span class="comment">//从k走到i(k固定的)</span></span><br><span class="line">                    <span class="built_in">get_path</span>(i, j); <span class="comment">//递归求i 到 j的路径</span></span><br><span class="line">                    path[cnt ++ ] = j; <span class="comment">//j到k , k 固定</span></span><br><span class="line">                &#125;</span><br><span class="line">         <span class="comment">//更新一下所有ij经过k的最短路径</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= n; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(d[i][j] &gt; d[i][k] + d[k][j])&#123;</span><br><span class="line">                    d[i][j] = d[i][k] + d[k][j];</span><br><span class="line">                    pos[i][j] = k;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(res == INF) <span class="built_in">puts</span>(<span class="string">&quot;No solution.&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt ; i++) cout &lt;&lt; path[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;无向图的最小环问题&quot;&gt;&lt;a href=&quot;#无向图的最小环问题&quot; class=&quot;headerlink&quot; title=&quot;无向图的最小环问题&quot;&gt;&lt;/a&gt;无向图的最小环问题&lt;/h3&gt;&lt;h4 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="Floyd" scheme="http://example.com/categories/Floyd/"/>
    
    
    <category term="Floyd" scheme="http://example.com/tags/Floyd/"/>
    
  </entry>
  
  <entry>
    <title>逆序对的数量（离散化+树状数组）</title>
    <link href="http://example.com/2022/09/22/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/"/>
    <id>http://example.com/2022/09/22/%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9/</id>
    <published>2022-09-22T00:26:57.000Z</published>
    <updated>2022-09-22T07:51:45.031Z</updated>
    
    <content type="html"><![CDATA[<h3 id="逆序对的数量（离散化-树状数组）"><a href="#逆序对的数量（离散化-树状数组）" class="headerlink" title="逆序对的数量（离散化+树状数组）"></a>逆序对的数量（离散化+树状数组）</h3><h4 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h4><p><a href="https://www.acwing.com/problem/content/790/">788. 逆序对的数量 - AcWing题库</a></p><h4 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h4><p>给一个序列 求逆序对的数量</p><p>逆序对的定义如下：对于数列的第 i 个和第 j 个元素，如果满足 i&lt;j且 a[i]&gt;a[j]，则其为一个逆序对；否则不是。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>正常情况下我们会想到用归并排序来找逆序对的数量，如果是这样，我就不会写这篇题解了</p><p>这里我们采用树状数组来解决这个问题</p><p>以下是解题步骤</p><p>首先对数组进行离散化（排序+去重）保证b数组严格单调递增的整数序列，并包含了 a 数组中的每一个数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//离散化 排序+去重</span></span><br><span class="line"><span class="built_in">sort</span>(b + <span class="number">1</span>, b + n + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">m = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//双指针去重</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i ++)</span><br><span class="line">    <span class="keyword">if</span>(b[i] != b[m])  b[++ m] = b[i];</span><br></pre></td></tr></table></figure><p>定义一个函数find（a[i]）用来返回整数a[i] 在 b数组中的下标</p><p>然后从前往后遍历a数组，树状数组用来维护 &lt;&#x3D; b[i] 的数的数量</p><p>求逆序对的时候 需要知道每一个a[i] 前面有几个数大于a[i]</p><p>直接求和暴力差不多 可以用 前面的数的总个数减去 &lt;&#x3D; a[i] 的数的个数，累加到答案里</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res += sum(m) - sum(find(a[i]))</span><br></pre></td></tr></table></figure><p>然后再往树状数组里加一个 a[i] 就可以了 （保证了在查询a[i]逆序对的个数的时候  树状数组里维护的数 &#x3D;&#x3D; i）</p><h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">500010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line"></span><br><span class="line"><span class="comment">//二分查找 a[i] 在b 中的位置</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>, r = m;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(b[mid] &gt;= x)  r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tr[N];<span class="comment">//树状数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//添加操作 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = x; i &lt;= m; i += i &amp; -i)  tr[i] ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求和</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = x; i; i -= i &amp; -i)  res += tr[i];</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]),  b[i] = a[i];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//离散化 排序+去重</span></span><br><span class="line">    <span class="built_in">sort</span>(b + <span class="number">1</span>, b + n + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    m = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//双指针去重</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i ++)</span><br><span class="line">        <span class="keyword">if</span>(b[i] != b[m])  b[++ m] = b[i];</span><br><span class="line"></span><br><span class="line">    LL res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x = <span class="built_in">find</span>(a[i]); <span class="comment">// 找到离散化后的下标</span></span><br><span class="line">        res += <span class="built_in">sum</span>(m) - <span class="built_in">sum</span>(x); <span class="comment">// sun(m) 求的是a[i] 前面的总数 sum(x) 求的是 &lt;= a[i] 的数</span></span><br><span class="line">        <span class="built_in">add</span>(x);<span class="comment">// 查询完后 将x 加入到 树状数组中 也就是 x 的直接后缀+1 （数量）</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;逆序对的数量（离散化-树状数组）&quot;&gt;&lt;a href=&quot;#逆序对的数量（离散化-树状数组）&quot; class=&quot;headerlink&quot; title=&quot;逆序对的数量（离散化+树状数组）&quot;&gt;&lt;/a&gt;逆序对的数量（离散化+树状数组）&lt;/h3&gt;&lt;h4 id=&quot;题目链接&quot;&gt;&lt;a </summary>
      
    
    
    
    <category term="树状数组" scheme="http://example.com/categories/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
    
    <category term="树状数组" scheme="http://example.com/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>acw传纸条</title>
    <link href="http://example.com/2022/09/20/acw275%E4%BC%A0%E7%BA%B8%E6%9D%A1/"/>
    <id>http://example.com/2022/09/20/acw275%E4%BC%A0%E7%BA%B8%E6%9D%A1/</id>
    <published>2022-09-20T00:26:57.000Z</published>
    <updated>2022-09-22T07:17:00.305Z</updated>
    
    <content type="html"><![CDATA[<h3 id="传纸条（线性DP）"><a href="#传纸条（线性DP）" class="headerlink" title="传纸条（线性DP）"></a>传纸条（线性DP）</h3><h4 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h4><p><a href="https://www.acwing.com/problem/content/277/">275. 传纸条 - AcWing题库</a></p><h4 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h4><p>给一个n * m的矩阵，里面的每个点都有权值，要求从左上角走到右下角 （1，1 -&gt; n，m），走两遍，除了起点和终点外，每个点只能走一次</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>首先要想怎么判断重合 有两种方式</p><p>1, x1 &#x3D;&#x3D; x2 , y1 &#x3D;&#x3D; y2 这种方式需要同时记录x1,x2,y1,y2 需要开一个4维数组 数据大的话容易爆掉</p><p>2.同时走两条路，记录总步数k，x1,x2 这样可以用k - x 代表y 优化一维 因为交集中的格子一定在每条路径的相同步数处</p><p>这里选择第二种</p><h4 id="状态表示"><a href="#状态表示" class="headerlink" title="状态表示"></a>状态表示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f[k][i][j] 表示两个人同时走了k步，第一个人在 (i, k - i) 处，第二个人在 (j, k - j)处的所有走法的最大分值</span><br></pre></td></tr></table></figure><h4 id="状态计算"><a href="#状态计算" class="headerlink" title="状态计算"></a>状态计算</h4><p>按照最后一步两个人的走法分成四种情况：</p><ol><li>两个人同时向右走，最大分值是 **f[k - 1, i, j] + score(k, i, j)**；</li><li>第一个人向右走，第二个人向下走，最大分值是 **f[k - 1, i, j - 1] + score(k, i, j)**；</li><li>第一个人向下走，第二个人向右走，最大分值是 **f[k - 1, i - 1, j] + score(k, i, j)**；</li><li>两个人同时向下走，最大分值是 **f[k - 1, i - 1, j - 1] + score(k, i, j)**；</li></ol><h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">55</span>;</span><br><span class="line"><span class="type">int</span> w[N][N];</span><br><span class="line"><span class="type">int</span> f[N * <span class="number">2</span> ][N][N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= m ; j++)</span><br><span class="line">            cin &gt;&gt; w[i][j];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">2</span> ; k &lt;= n + m ; k ++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="built_in">max</span>(<span class="number">1</span>,k - m) ; i &lt;= n &amp;&amp; i &lt; k ;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="built_in">max</span>(<span class="number">1</span>, k - m) ; j &lt;= n &amp;&amp; j &lt; k ; j++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> a = <span class="number">0</span> ; a &lt;= <span class="number">1</span> ; a++)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> b = <span class="number">0</span> ; b &lt;= <span class="number">1</span> ; b++)&#123;</span><br><span class="line">                        <span class="type">int</span> t = w[i][k - i];</span><br><span class="line">                        <span class="comment">// 除了起点和终点之外，其余每个格子只能走一次</span></span><br><span class="line">                        <span class="keyword">if</span>(i != j || k == <span class="number">2</span> || k == n + m)&#123;</span><br><span class="line">                            t += w[j][k - j];</span><br><span class="line">                            f[k][i][j] = <span class="built_in">max</span>(f[k][i][j],f[k - <span class="number">1</span>][i - a][j - b] + t);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">    <span class="comment">//注意答案是 n n </span></span><br><span class="line">    cout &lt;&lt; f[n + m][n][n] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二维滚动优化-非法状态优化-对称优化-某条路径永远在另一条下方"><a href="#二维滚动优化-非法状态优化-对称优化-某条路径永远在另一条下方" class="headerlink" title="二维滚动优化+非法状态优化+对称优化(某条路径永远在另一条下方)"></a>二维滚动优化+非法状态优化+对称优化(某条路径永远在另一条下方)</h4><p>此代码来自某篇题解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">55</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> f[N][N], w[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;w[i][j]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">2</span>; k &lt;= m + n; ++k) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x1 = <span class="built_in">min</span>(m, k - <span class="number">1</span>); x1 &gt;= <span class="built_in">max</span>(<span class="number">1</span>, k - n); --x1) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> x2 = x1; x2 &gt;= <span class="built_in">max</span>(<span class="number">1</span>, k - n); --x2) &#123;</span><br><span class="line">                <span class="type">int</span> y1 = k - x1, y2 = k - x2;</span><br><span class="line">                <span class="comment">//max（&#123;列表&#125;） 可以求列表内的最大值</span></span><br><span class="line">                f[x1][x2] = w[x1][y1] + (x1 != x2) * w[x2][y2] + <span class="built_in">max</span>(</span><br><span class="line">                    &#123;f[x1 - <span class="number">1</span>][x2], f[x1][x2 - <span class="number">1</span>], f[x1 - <span class="number">1</span>][x2 - <span class="number">1</span>], f[x1][x2]&#125;</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, f[m][m]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;传纸条（线性DP）&quot;&gt;&lt;a href=&quot;#传纸条（线性DP）&quot; class=&quot;headerlink&quot; title=&quot;传纸条（线性DP）&quot;&gt;&lt;/a&gt;传纸条（线性DP）&lt;/h3&gt;&lt;h4 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="线性规划" scheme="http://example.com/categories/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/"/>
    
    
    <category term="线性规划" scheme="http://example.com/tags/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Vue基础</title>
    <link href="http://example.com/2022/09/20/vue/"/>
    <id>http://example.com/2022/09/20/vue/</id>
    <published>2022-09-20T00:26:57.000Z</published>
    <updated>2022-09-20T09:42:50.902Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue基础"><a href="#Vue基础" class="headerlink" title="Vue基础"></a>Vue基础</h2><h3 id="Vue简介"><a href="#Vue简介" class="headerlink" title="Vue简介"></a>Vue简介</h3><p>Vue (发音为 &#x2F;vjuː&#x2F;，类似 <strong>view</strong>) 是一款用于构建用户界面的 JavaScript 框架。它基于标准 HTML、CSS 和 JavaScript 构建，并提供了一套声明式的、组件化的编程模型，帮助你高效地开发用户界面。无论是简单还是复杂的界面，Vue 都可以胜任。</p><p>​1.JavaScript框架</p><p>​2.简化Dom操作</p><p>​3.响应式数据驱动</p><h3 id="第一个Vue程序"><a href="#第一个Vue程序" class="headerlink" title="第一个Vue程序"></a>第一个Vue程序</h3><p>官方文档：<a href="https://cn.vuejs.org/">Vue.js - 渐进式 JavaScript 框架 | Vue.js (vuejs.org)</a></p><p>经历三个步骤</p><ol><li><p>导入开发版本的Vue.js</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建Vue实例对象，设置el属性和data属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,<span class="comment">// # 对应上面的id</span></span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;Hello Vue!&#x27;</span> <span class="comment">//对应上面的message</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>使用简介的模板语法吧数据渲染到页面上</p></li></ol><h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">message</span>: <span class="string">&#x27;你好 小黑！&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="el：挂载点"><a href="#el：挂载点" class="headerlink" title="el：挂载点"></a>el：挂载点</h3><p>el是用来设置Vue实例挂载（管理）的元素</p><ol><li><p>Vue实例的作用范围是什么呢？</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue会管理el选项命中的元素及其内部的后代元素</span><br></pre></td></tr></table></figure></li><li><p>是否可以使用其他的选择器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以使用其他的选择器，但是建议使用ID选择器</span><br></pre></td></tr></table></figure></li><li><p>是否可以设置其他的dom元素呢？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以使用其他的双标签，不能使用HTML和BODY</span><br></pre></td></tr></table></figure></li></ol><h3 id="data：数据对象"><a href="#data：数据对象" class="headerlink" title="data：数据对象"></a>data：数据对象</h3><ul><li>Vue中用到的数据定义在data中</li><li>data中可以写复杂类型的数据</li><li>渲染负载类型数据时，遵守js的语法即可</li></ul><h4 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; message &#125;&#125;</span><br><span class="line">    //对象类型 </span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; school.name &#125;&#125;  &#123;&#123; school.mobile &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        //数组类型</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span> &#123;&#123;campus[0] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span> &#123;&#123;campus[1] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span> &#123;&#123;campus[2] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span> &#123;&#123;campus[3] &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">message</span>:<span class="string">&quot;小黑&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">school</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>:<span class="string">&quot;小黑黑&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">mobile</span>:<span class="string">&quot;400-648-9090&quot;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">campus</span>:[<span class="string">&quot;北京&quot;</span>,<span class="string">&quot;上海&quot;</span>,<span class="string">&quot;广州&quot;</span>,<span class="string">&quot;深圳&quot;</span>]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="本地应用"><a href="#本地应用" class="headerlink" title="本地应用"></a>本地应用</h2><ol><li>内容绑定，事件绑定</li><li>显示切换，属性绑定</li><li>列表循环，表单元素绑定</li></ol><h4 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h4><p>v-text 指令的作用是：设置标签的内容（testContent）</p><p>默认写法会替换全部内容，使用差值表达式 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#125;&#125;</span><br></pre></td></tr></table></figure><p> 可以替换指定内容</p><p>内部支持写表达式</p><h5 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    //注意单 双引号</span><br><span class="line">    //字符串拼接</span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;message + &#x27;!&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;info + &#x27;!&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message + &quot;!&quot;&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">message</span>: <span class="string">&quot;小黑&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">info</span>: <span class="string">&quot;前端与移动教研部&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h4><p>设置标签的innerHTMl</p><p>v-html指定的作用是：设置元素的innerHTML</p><p>内容中有html结构会被解析为标签</p><p>v-text指令无论内容是什么只会解析为文本</p><h5 id="Code-3"><a href="#Code-3" class="headerlink" title="Code"></a>Code</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--2.html结构--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    //注意单 双引号</span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    //可以加载链接</span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-html</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//创建Vue实例</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// content:&quot;小黑&quot;</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">content</span>:<span class="string">&quot;&lt;a href=&#x27;https://shengwillak.cn&#x27;&gt;笙的个人博客&lt;/a&gt;&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="v-on基础"><a href="#v-on基础" class="headerlink" title="v-on基础"></a>v-on基础</h4><p>v-on 指令的作用是：为元素绑定事件</p><p>事件名不需要写on</p><p>指令可以简写为@</p><p>绑定的方法定义在methods属性中</p><p>方法内部通过this关键字可以访问定义在data中数据</p><h5 id="Code-4"><a href="#Code-4" class="headerlink" title="Code"></a>Code</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--2.html结构--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;v-on指令&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;doIt&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;v-on简写&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;doIt&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;双击&quot;</span> @<span class="attr">dblclick</span>=<span class="string">&quot;doIt&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> @<span class="attr">click</span>=<span class="string">&quot;changeFood&quot;</span>&gt;</span>&#123;&#123; food &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//创建Vue实例</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">food</span>:<span class="string">&quot;西兰花炒蛋&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">doIt</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&quot;sheng&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">changeFood</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">food</span> += <span class="string">&quot;好好吃&quot;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="计数器"><a href="#计数器" class="headerlink" title="计数器"></a>计数器</h4><h5 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h5><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220920141930269.png" alt="image-20220920141930269"></p><h5 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h5><ol><li>data中定义数据:此如num</li><li>methods中添加两个方法:比如add(递增),sub(递减)</li><li>使用v-text将num设置给span标签</li><li>使用v-on将add,sub分别绑定给+,按钮</li><li>累加的逻辑:小于10累加，否则提示6.递减的逻辑:大于0递减,否则提示</li></ol><h5 id="Code-5"><a href="#Code-5" class="headerlink" title="Code"></a>Code</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--html结构--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 计数器功能区域   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-num&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sub&quot;</span>&gt;</span></span><br><span class="line">            -</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span> &#123;&#123; num &#125;&#125; <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span></span><br><span class="line">            +</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">num</span>:<span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">add</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(&#x27;add&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">num</span> &lt; <span class="number">10</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">num</span>++;</span></span><br><span class="line"><span class="language-javascript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(<span class="string">&quot;最大了&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">sub</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(&#x27;sub&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">num</span> &gt; <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">num</span>--;</span></span><br><span class="line"><span class="language-javascript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(<span class="string">&quot;最小了&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><ul><li><p>创建Vue示例时：el（挂载点），data（数据），methiods（方法）</p></li><li><p>v - on 指令的作用是绑定事件，简写为@</p></li><li><p>方法中通过this，关键字换取data中的数据’</p></li><li><p>v-text指令的作用是：设置元素的文本值，简写为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#125;&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h4><p>根据表达值的真假，切换元素的显示和隐藏</p><h5 id="Code-6"><a href="#Code-6" class="headerlink" title="Code"></a>Code</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeIsShow&quot;</span> <span class="attr">value</span>=<span class="string">&quot;切换显示状态&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;累加年龄&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;addAge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://www.keaidian.com/uploads/allimg/190424/24110307_0.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-show</span>=<span class="string">&quot;age &gt;= 18&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://www.keaidian.com/uploads/allimg/190424/24110307_0.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">isShow</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">age</span>:<span class="number">17</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">changeIsShow</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">isShow</span> = !<span class="variable language_">this</span>.<span class="property">isShow</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">addAge</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">age</span> ++;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><ul><li>v-show指令的作用是：根据真假切换元素的显示状态</li><li>原理是修改元素的display，实现显示隐藏</li><li>指令后面的内容，最终都会解析为布尔值</li><li>值为true元素显示，值为false元素隐藏</li><li>数据改变之后，对应元素的显示状态会同步更新</li></ul><h4 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h4><p>根据表达值的真假，切换元素的显示和隐藏（操纵dom元素）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeIsShow&quot;</span> <span class="attr">value</span>=<span class="string">&quot;切换显示状态&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://www.keaidian.com/uploads/allimg/190424/24110307_0.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://www.keaidian.com/uploads/allimg/190424/24110307_0.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;temperature&gt;=35&quot;</span>&gt;</span>热死啦<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">isShow</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">temperature</span>:<span class="number">40</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">changeIsShow</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">isShow</span> = !<span class="variable language_">this</span>.<span class="property">isShow</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h5><ul><li>v-if指令的作用是：根据表达式的真假切换元素的显示状态</li><li>本质是通过操纵dom元素来切换显示状态</li><li>表达式的值为true，元素存在于dom树中，为false。从dom树中移除</li><li>频繁的切换v-show，反之使用v-if，前者的切换消耗小</li></ul><h4 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h4><h5 id="Code-7"><a href="#Code-7" class="headerlink" title="Code"></a>Code</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.active</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;imgTitle + &#x27;!!!&#x27;&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;isActive?&#x27;active&#x27;:&#x27;&#x27;&quot;</span> @<span class="attr">click:</span>=<span class="string">&quot;toggleActive&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--     对象思想--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;imgTitle + &#x27;!!!&#x27;&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;active:isActive&#125;&quot;</span> @<span class="attr">closed</span>=<span class="string">&quot;toggleActive&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">imgSrc</span>:<span class="string">&quot;https://www.keaidian.com/uploads/allimg/190424/24110307_0.jpg&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">imgTitle</span>:<span class="string">&quot;小黑&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">isActive</span>:<span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toggleActive</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">isActive</span> = !<span class="variable language_">this</span>.<span class="property">isActive</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h5><ul><li>v-bind指令的作用是：为元素绑定属性</li><li>完整写法是v-bind：属性名</li><li>简写的话可以省略v-bind，只保留：属性名</li><li>需要动态的增删class建议使用对象的方式</li></ul><h4 id="图片切换"><a href="#图片切换" class="headerlink" title="图片切换"></a>图片切换</h4><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220920151909393.png" alt="image-20220920151909393"></p><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220920152029566.png" alt="image-20220920152029566"></p><h5 id="Code-8"><a href="#Code-8" class="headerlink" title="Code"></a>Code</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">imgArr</span>:[</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            ],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">index</span>:<span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">prev</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">this</span>.<span class="property">index</span>--;  </span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">next</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">index</span>++;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h5><ul><li>列表数据使用数组保存‘</li><li>v-bind指令可以设置元素属性，比如src</li><li>v-show和v-if都可以切换元素的显示状态，频繁切换用v-show</li></ul><h4 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h4><p>根据数据生成列表结构</p><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220920153047321.png" alt="image-20220920153047321"></p><h5 id="Code-9"><a href="#Code-9" class="headerlink" title="Code"></a>Code</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;添加数据&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;移除数据&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;remove&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(it,index) in arr&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123; index+1 &#125;&#125; 小黑:&#123;&#123; it &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-for</span>=<span class="string">&quot;item in vegetables&quot;</span> <span class="attr">v-bind::tite</span>=<span class="string">&quot;item.name&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; item.name &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">arr</span>:[<span class="string">&quot;北京&quot;</span>,<span class="string">&quot;上海&quot;</span>,<span class="string">&quot;广州&quot;</span>,<span class="string">&quot;深圳&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">vegetables</span>:[</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="attr">name</span>:<span class="string">&quot;西兰花炒蛋&quot;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;<span class="attr">name</span>:<span class="string">&quot;蛋炒西兰花&quot;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">add</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">vegetables</span>.<span class="title function_">push</span>(&#123;<span class="attr">name</span>:<span class="string">&quot;小黑&quot;</span>&#125;);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 移除最左边的元素</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">remove</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">vegetables</span>.<span class="title function_">shift</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h5><ul><li>v-for指令的作用是:根据数据生成列表结构</li><li>数组经常和v-for结合使用</li><li>语法是( item,index) in数据</li><li>item和index可以结合其他指令一起使用</li><li>数组长度的更新会同步到页面上，是响应式的</li></ul><h4 id="v-on补充"><a href="#v-on补充" class="headerlink" title="v-on补充"></a>v-on补充</h4><p>传递自定义参数，事件修饰符</p><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220920154419100.png" alt="image-20220920154419100"></p><h5 id="Code-10"><a href="#Code-10" class="headerlink" title="Code"></a>Code</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点击&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;doIt(666,&#x27;小黑&#x27;)&quot;</span>&gt;</span></span><br><span class="line">    // 绑定enter键</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>  @<span class="attr">keyup.enter</span>=<span class="string">&quot;sayHi&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">doIt</span>:<span class="keyword">function</span> (<span class="params">p1,p2</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;做it&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(p1);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(p2);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">sayHi</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&quot;吃了妹&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h6><ul><li>事件绑定的方法写成函数调用的形式，可以传入自定义参数</li><li>定义方法时需要定义形参来接收传入的实参</li><li>事件的后面跟上.修饰符可以对事件进行限制</li><li>enter可以限制触发的按键为回车</li><li>事件修饰符有多种</li></ul><h4 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h4><p>获取和设置表单元素的值（双向数据绑定）</p><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220920155335791.png" alt="image-20220920155335791"></p><h5 id="Code-11"><a href="#Code-11" class="headerlink" title="Code"></a>Code</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;getM&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;修改message&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;setM&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span> &#123;&#123; message&#125;&#125; <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">message</span>:<span class="string">&quot;小黑&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">getM</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">message</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">setM</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">message</span>=<span class="string">&quot;大黑&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="总结-5"><a href="#总结-5" class="headerlink" title="总结"></a>总结</h5><ul><li>v-model指令的作用是便捷的设置和获取表单元素的值</li><li>绑定的数据会和表单元素值相关联</li><li>绑定的数据←– →表单元素的值</li></ul><h4 id="小黑记事本"><a href="#小黑记事本" class="headerlink" title="小黑记事本"></a>小黑记事本</h4><p>新增</p><ol><li>生成列表结构（for数组）</li><li>获取用户输入（v-model）</li><li>回车，新增数据（v-on，enter 添加数据）</li></ol><p>删除</p><p>点击删除指定内容（v-on splice 索引）</p><p>统计</p><p>统计信息个数（v-text length）</p><p>清空</p><p>点击清楚所有信息（v-on 清空数组）</p><p>隐藏</p><p>没有数据时，隐藏元素（v-show v-if 数组非空）</p><h5 id="总结-6"><a href="#总结-6" class="headerlink" title="总结"></a>总结</h5><ul><li>列表结构可以通过v-for指令结合数据生成</li><li>v-on结合事件修饰符可以对事件进行限制,比如.enter</li><li>v-on在绑定事件时可以传递自定义参数</li><li>通过v-model可以快速的设置和获取表单元素的值</li><li>基于数据的开发方式</li></ul><h3 id="网络应用"><a href="#网络应用" class="headerlink" title="网络应用"></a>网络应用</h3><h4 id="axios-网络请求库"><a href="#axios-网络请求库" class="headerlink" title="axios 网络请求库"></a>axios 网络请求库</h4><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220920162115142.png" alt="image-20220920162115142"></p><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220920162130543.png" alt="image-20220920162130543"></p><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220920162139583.png" alt="image-20220920162139583"></p><h5 id="Code-12"><a href="#Code-12" class="headerlink" title="Code"></a>Code</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;get&quot;</span> <span class="attr">class</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;post&quot;</span> <span class="attr">class</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--官网提供的axios在线地址--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.get&quot;</span>).<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        axios.<span class="title function_">get</span>(<span class="string">&quot;http://autumbfish.cn/api/joke/list?num=3&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            .<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">response</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(response)</span></span><br><span class="line"><span class="language-javascript">            &#125;,<span class="keyword">function</span> (<span class="params">err</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.post&quot;</span>).<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        axios.<span class="title function_">post</span>(<span class="string">&quot;http://autumnfish.cn/api/user/reg&quot;</span>,&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">username</span>:<span class="string">&quot;西兰花&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">response</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(response);</span></span><br><span class="line"><span class="language-javascript">        &#125;,<span class="keyword">function</span> (<span class="params">err</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="总结-7"><a href="#总结-7" class="headerlink" title="总结"></a>总结</h5><ul><li>axios必须先导入才可以使用</li><li>使用get或post方法即可发送对应的请求</li><li>then方法中的回调函数会在请求成功或失败时触发</li><li>通过回调函数的形参可以获取响应内容,或错误信息</li></ul><h4 id="axios-vue"><a href="#axios-vue" class="headerlink" title="axios + vue"></a>axios + vue</h4><h5 id="Code-13"><a href="#Code-13" class="headerlink" title="Code"></a>Code</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取笑话&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;getjoke&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--官网提供的axios在线地址--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">joke</span>:<span class="string">&quot;很好笑的 笑话&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">getJole</span>:<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> that = <span class="variable language_">this</span></span></span><br><span class="line"><span class="language-javascript">                axios.<span class="title function_">get</span>(<span class="string">&quot;https://autumbfish,cn/api/joke&quot;</span>).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">reponse</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(reponse.<span class="property">data</span>)</span></span><br><span class="line"><span class="language-javascript">                    that.<span class="property">joke</span> = reponse.<span class="property">data</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;,<span class="keyword">function</span> (<span class="params">err</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="总结-8"><a href="#总结-8" class="headerlink" title="总结"></a>总结</h5><ul><li>axios回调函数中的this已经改变无法访问到data中数据</li><li>把this保存起来,回调函数中直接使用保存的this即可</li><li>和本地应用的最大区别就是改变了数据来源</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Vue基础&quot;&gt;&lt;a href=&quot;#Vue基础&quot; class=&quot;headerlink&quot; title=&quot;Vue基础&quot;&gt;&lt;/a&gt;Vue基础&lt;/h2&gt;&lt;h3 id=&quot;Vue简介&quot;&gt;&lt;a href=&quot;#Vue简介&quot; class=&quot;headerlink&quot; title=&quot;Vue</summary>
      
    
    
    
    <category term="Vue" scheme="http://example.com/categories/Vue/"/>
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>差分</title>
    <link href="http://example.com/2022/09/20/%E5%B7%AE%E5%88%86/"/>
    <id>http://example.com/2022/09/20/%E5%B7%AE%E5%88%86/</id>
    <published>2022-09-20T00:26:57.000Z</published>
    <updated>2022-09-24T08:23:58.858Z</updated>
    
    <content type="html"><![CDATA[<h3 id="普通差分"><a href="#普通差分" class="headerlink" title="普通差分"></a>普通差分</h3><p>b[i] 为 a[i] 的差分数组</p><p>a[i] 为b[i] 的前缀和数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">difference</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">100010</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] b = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        n = sc.nextInt();</span><br><span class="line">        m = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">            a[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//假设a[i] 全为0 在输入数据的时候 只是把数据插入到指定位置</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">            insert(i,i,a[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (m-- &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            insert(l,r,c);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//b[i] 的前缀和 则为 插入后的a[i]</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">            b[i] += b[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">            System.out.print(b[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//b 作为a 的差分数组 一开始 的时候 因为假想 a 全为0 则 b 也全为0</span></span><br><span class="line">    <span class="comment">//b为差分数组 整体加或减 只对 b 的两个边界 有影响</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> l ,<span class="type">int</span> r ,<span class="type">int</span> c)</span>&#123;</span><br><span class="line">        b[l] += c;</span><br><span class="line">        b[r + <span class="number">1</span>] -= c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="矩阵差分"><a href="#矩阵差分" class="headerlink" title="矩阵差分"></a>矩阵差分</h3><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220508145059920.png" alt="image-20220508145059920"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">differenceMatrix</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">10010</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[][] a = <span class="keyword">new</span> <span class="title class_">int</span>[N][N];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[][] b = <span class="keyword">new</span> <span class="title class_">int</span>[N][N];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">q</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> ; i &lt;= n ; i++ )&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span> ; j &lt;= m ; j++)&#123;</span><br><span class="line">                a[i][j] = sc.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//插入</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span> ; j &lt;= m ; j++)&#123;</span><br><span class="line">                insert(i,j,i,j,a[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (q-- &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">x1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">y1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">x2</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">y2</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            insert(x1,y1,x2,y2,c);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//求前矩阵和</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span> ; j &lt;= m ; j++)&#123;</span><br><span class="line">                b[i][j] += b[i -<span class="number">1</span>][j] + b[i][j - <span class="number">1</span>] - b[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> ;i &lt;= n ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span> ; j &lt;= m ; j++)&#123;</span><br><span class="line">                System.out.print(b[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> x1,<span class="type">int</span> y1,<span class="type">int</span> x2,<span class="type">int</span> y2,<span class="type">int</span> c)</span>&#123;</span><br><span class="line">        b[x1][y1] += c;</span><br><span class="line">        b[x1][y2+<span class="number">1</span>] -= c;</span><br><span class="line">        b[x2+<span class="number">1</span>][y1] -= c;</span><br><span class="line">        b[x2 +<span class="number">1</span>][y2 + <span class="number">1</span>] += c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;普通差分&quot;&gt;&lt;a href=&quot;#普通差分&quot; class=&quot;headerlink&quot; title=&quot;普通差分&quot;&gt;&lt;/a&gt;普通差分&lt;/h3&gt;&lt;p&gt;b[i] 为 a[i] 的差分数组&lt;/p&gt;
&lt;p&gt;a[i] 为b[i] 的前缀和数组&lt;/p&gt;
&lt;figure class=&quot;</summary>
      
    
    
    
    <category term="差分" scheme="http://example.com/categories/%E5%B7%AE%E5%88%86/"/>
    
    
    <category term="差分" scheme="http://example.com/tags/%E5%B7%AE%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>前缀和</title>
    <link href="http://example.com/2022/09/19/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    <id>http://example.com/2022/09/19/%E5%89%8D%E7%BC%80%E5%92%8C/</id>
    <published>2022-09-19T00:26:57.000Z</published>
    <updated>2022-09-19T08:12:37.387Z</updated>
    
    <content type="html"><![CDATA[<h3 id="普通前缀和"><a href="#普通前缀和" class="headerlink" title="普通前缀和"></a>普通前缀和</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">preSum</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">100010</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] b = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            a[i] = sc.nextInt();</span><br><span class="line">            b[i] = b[i - <span class="number">1</span>] + a[i];     <span class="comment">//存储前i的和</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (m-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            System.out.println(b[r] - b[l - <span class="number">1</span>]); <span class="comment">//前r的和  减去 前了l-1 的和</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="矩阵前缀和"><a href="#矩阵前缀和" class="headerlink" title="矩阵前缀和"></a>矩阵前缀和</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">matrixSum</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">1010</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> n,m,q;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[][] a = <span class="keyword">new</span> <span class="title class_">int</span>[N][N];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[][] s = <span class="keyword">new</span> <span class="title class_">int</span>[N][N];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        n = sc.nextInt();</span><br><span class="line">        m = sc.nextInt();</span><br><span class="line">        q = sc.nextInt();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= m ; j++)&#123;</span><br><span class="line">                a[i][j] = sc.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//初始化前缀和数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n ; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= m ; j++)&#123;</span><br><span class="line">                s[i][j] = s[i - <span class="number">1</span>][j] + s[i][j - <span class="number">1</span>] - s[i - <span class="number">1</span>][j - <span class="number">1</span>] + a[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//询问</span></span><br><span class="line">        <span class="keyword">while</span> (q--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">x1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">y1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">x2</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">y2</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">            System.out.println(s[x2][y2] - s[x1 - <span class="number">1</span>][y2] - s[x2][y1 - <span class="number">1</span>] + s[x1 - <span class="number">1</span>][y1 - <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220508095706396.png" alt="image-20220508095706396"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;普通前缀和&quot;&gt;&lt;a href=&quot;#普通前缀和&quot; class=&quot;headerlink&quot; title=&quot;普通前缀和&quot;&gt;&lt;/a&gt;普通前缀和&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;</summary>
      
    
    
    
    <category term="前缀和" scheme="http://example.com/categories/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
    
    <category term="前缀和" scheme="http://example.com/tags/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
  </entry>
  
  <entry>
    <title>牛客57小白赛题解</title>
    <link href="http://example.com/2022/09/17/%E7%89%9B%E5%AE%A257%E5%B0%8F%E7%99%BD%E8%B5%9B/"/>
    <id>http://example.com/2022/09/17/%E7%89%9B%E5%AE%A257%E5%B0%8F%E7%99%BD%E8%B5%9B/</id>
    <published>2022-09-17T04:12:57.000Z</published>
    <updated>2022-09-18T12:56:54.656Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>​好久没写题了，被吊打（虽然以前也很菜）</p><p>​第一篇题解 纪念一下</p><h3 id="A-最大面积"><a href="#A-最大面积" class="headerlink" title="A.最大面积"></a>A.最大面积</h3><p>嗝，签到题</p><h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;-----&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">LL x ,y;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; x &gt;&gt; y;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">min</span>(n,x) * <span class="built_in">min</span>(m,y) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line"><span class="comment">// cin &gt;&gt; T;</span></span><br><span class="line">T = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(T--) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="B-种树"><a href="#B-种树" class="headerlink" title="B.种树"></a>B.种树</h3><p>简单来说 就是 从一颗树出发，最多两个方向都需要走，所以结果最多为2</p><p>有3种情况：</p><p>​1.每个地方都有树 答案为0</p><p>​2.0或者n 有树 ，这种情况下沿着一个方向直走 就能都中上树，答案为1</p><p>​3.中间有树，这种情况下 因为 两边均没有树 所以需要 两个方向都遍历 答案为2 </p><h4 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;-----&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="comment">//find 函数找不到时 会返回 npos</span></span><br><span class="line">  <span class="keyword">if</span>(s.<span class="built_in">find</span>(<span class="string">&#x27;0&#x27;</span>) == s.npos)&#123;</span><br><span class="line">   cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">&#x27;1&#x27;</span> || s[n - <span class="number">1</span>] == <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line"><span class="comment">// cin &gt;&gt; T;</span></span><br><span class="line">T = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(T--) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="C-奇怪的电梯"><a href="#C-奇怪的电梯" class="headerlink" title="C.奇怪的电梯"></a>C.奇怪的电梯</h3><p>分析题意，如果 n &lt;&#x3D; k 的话 说明 整个n 都在 a + k 到 a - k 之间 无解（除a &#x3D;&#x3D; b）</p><p>a &#x3D;&#x3D; b 不需要进行任何操作</p><p>剩下的情况分为2种</p><p>​1.b 处于 a + k 和 a - k 之外 能直接到达</p><p>​2.b 处于 a + k 和 a - k 之间 此时a需要楼层进行中转（推荐 1 和 n 这样可以少去许多麻烦 1一定是可以到n的）</p><p>​a &lt; b 中转顺序为 a -&gt; n -&gt; 1 -&gt; b </p><p>​a &gt; b 中转顺序为 a -&gt; 1 -&gt; n -&gt; b</p><p>​总结一下 就是需要考虑 a 能不能到 1 或者 n 和 b 能不能到 1 或者 n</p><h4 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;-----&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line">LL n,m,k,a,b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k &gt;&gt; a &gt;&gt; b;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(a == b || <span class="built_in">abs</span>(a - b) &gt; k)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(n &lt;= k) <span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((<span class="built_in">abs</span>(a - <span class="number">1</span>) &gt; k || <span class="built_in">abs</span>(a - n) &gt; k) &amp;&amp; (<span class="built_in">abs</span>(b - <span class="number">1</span>) &gt; k || <span class="built_in">abs</span>(b - n) &gt; k)) <span class="built_in">puts</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span>(T--) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="D-最大gcd"><a href="#D-最大gcd" class="headerlink" title="D.最大gcd"></a>D.最大gcd</h3><p>求最大gcd 最容易想到的就是 双重循环 暴力枚举 复杂度On^2 会超时</p><p>那么换一下思维 ，这个题 范围最多为1e6 最大的gcd也为 1e6</p><p>那么我们可以枚举一下 gcd 如果 gcd的倍数中有两个是 原数组的 那么这个gcd为合法的 </p><p>对合法的 gcd 取max 即为答案</p><h4 id="Code-3"><a href="#Code-3" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;-----&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> m[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a , <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> b ? <span class="built_in">gcd</span>(b , a % b) : a ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">int</span> maxx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">m[a[i]]++;</span><br><span class="line">maxx = <span class="built_in">max</span>(maxx,a[i]);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt;= maxx ; i++)&#123; <span class="comment">//枚举约数</span></span><br><span class="line"><span class="type">int</span> cnt =  <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = i ; j &lt;= maxx ; j += i) <span class="comment">//枚举约数的倍数</span></span><br><span class="line">cnt += m[j];</span><br><span class="line"><span class="keyword">if</span>(cnt &gt;= <span class="number">2</span>) ans = <span class="built_in">max</span>(ans,i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line"><span class="comment">// cin &gt;&gt; T;</span></span><br><span class="line">T = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(T--) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="E-一道难题"><a href="#E-一道难题" class="headerlink" title="E.一道难题"></a>E.一道难题</h3><p>由题意可以了解到 每个符合的数都是由01组成的 由此容易联想到二进制 毕竟二进制也是由01组成</p><p>我们还注意到 题里说不含前导0 因此我们构造的二进制数 第一位一定为1</p><p>因为我们构造的数一定 要比 n 小 所以 在构造的时候一定要注意 控制 构造数的大小</p><p>在构造的时候如果高位已经比n小 那么后面就可以 一直取1了 不会影响大小</p><p>如果无法判断大小 则就需要慢慢比较 </p><p>对于每个构造出来的数  直接暴力判断即可</p><p>（说不清楚了 感觉在胡说八道 还是看代码吧 寄）</p><h4 id="Code-4"><a href="#Code-4" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;-----&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//位运算 暴力判断</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span> <span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> tmp;</span><br><span class="line"><span class="keyword">while</span>(n)&#123;</span><br><span class="line">tmp = (n &amp; <span class="number">1</span>);</span><br><span class="line">n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (tmp) len ++;</span><br><span class="line"><span class="keyword">else</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (len == <span class="number">3</span>) <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">LL n = <span class="number">0</span>;</span><br><span class="line"><span class="type">bool</span> st = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">length</span>(); i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (st)&#123; <span class="comment">//已经确定 构造的数比s小 都取1</span></span><br><span class="line">n += (<span class="number">1ll</span> &lt;&lt; (s.<span class="built_in">length</span>() - i - <span class="number">1</span>));</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">// s[i] &gt; 1 可以判定 构造的数 一定比 s小了</span></span><br><span class="line"><span class="keyword">if</span> (s[i] &gt; <span class="string">&#x27;1&#x27;</span>) st = <span class="literal">true</span>, n += (<span class="number">1ll</span> &lt;&lt; (s.<span class="built_in">length</span>() - i - <span class="number">1</span>));</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27;1&#x27;</span>) n += (<span class="number">1ll</span> &lt;&lt; (s.<span class="built_in">length</span>() - i - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LL res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(i)) res++;</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line"><span class="comment">// cin &gt;&gt; T;</span></span><br><span class="line">T = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(T--) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>还有一种解法 是别人写的 放在这里做扩展</p><h4 id="Code-5"><a href="#Code-5" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string s,t;</span><br><span class="line"><span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(string t)</span><span class="comment">//检查是否满足三个连续的1</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> y=t.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> a=<span class="number">0</span>;a&lt;y<span class="number">-2</span>;a++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(t[a]==<span class="string">&#x27;1&#x27;</span>&amp;&amp;t[a+<span class="number">1</span>]==<span class="string">&#x27;1&#x27;</span>&amp;&amp;t[a+<span class="number">2</span>]==<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(string t,<span class="type">int</span> num)</span><span class="comment">//遍历</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t.<span class="built_in">size</span>()&lt;s.<span class="built_in">size</span>()||t&lt;=s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(t))</span><br><span class="line">            ans++; </span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(t.<span class="built_in">size</span>()&gt;=s.<span class="built_in">size</span>())</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    <span class="built_in">dfs</span>(t+<span class="string">&#x27;0&#x27;</span>,num++);</span><br><span class="line">       <span class="built_in">dfs</span>(t+<span class="string">&#x27;1&#x27;</span>,num++);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    t=<span class="string">&quot;1&quot;</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(t,<span class="number">1</span>);</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="F-序列操作"><a href="#F-序列操作" class="headerlink" title="F.序列操作"></a>F.序列操作</h3><p>好难 暂搬题解</p><p>因为 <em>x+px</em>和 <em>x</em> 在模 <em>p</em> 下意义相同，不难发现 <em>x</em> 一定位于 [0,<em>p</em>−1] 内。特判  <em>x&#x3D;0</em>，枚举<br>$$<br>x(1≤x≤p−1)<br>$$<br>，通过解同余方程求出每个 x下 A→B的操作次数，对每个 ai 来说，解<br>$$<br>(ai+kx) ≡ bi  (mod p)<br>$$</p><p>$$<br>kx ≡ (bi−ai)  (mod p)<br>$$</p><p>因为p是质数 因此次数（费马小定理求逆元）<br>$$<br>k&#x3D;((bi− ai) ∗ x ^  (p−2) ) % p<br>$$<br>对于每个 <em>x</em>，解 <em>n</em> 个同余方程后得到一个次数数组，因为题目要求是对一个子序列操作，所以次数数组里的最大值即为这个 <em>x</em> 对应的操作次数。</p><p>最小次数所对应的最小的 <em>x</em> 即为答案。</p><p>时间复杂度 <em>O(n(log⁡p+p))</em> 。但这个复杂度显然会超时，我们需要进一步优化。</p><p>注意到 <em>(bi−ai)%p</em> 的结果最多只有 <em>p</em> 个，若 <em>(bt−at)%p&#x3D;(bk−ak)%p</em>，那么解对应的同余方程所得到的结果是一样的，所以我们可以把这两个位置上的数当成一个来看，因此最多只需要解 <em>p</em> 个同余方程，时间复杂度进一步优化成 *O(p(log⁡p+p))*。</p><h4 id="Code-6"><a href="#Code-6" class="headerlink" title="Code"></a>Code</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> debug puts(<span class="string">&quot;-----&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="comment">//快速幂 求x的逆元</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> a ,<span class="type">int</span> b , <span class="type">int</span> p)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">while</span>(b)&#123;</span><br><span class="line"><span class="keyword">if</span>(b &amp; <span class="number">1</span>) ans = (ans * a) % p;</span><br><span class="line">a = (a * a) % p;</span><br><span class="line">b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans % p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> p;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; p;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span> , <span class="title">b</span><span class="params">(n)</span></span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i : a) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i : b) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i : a) i %= p;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//特判 a == b 的情况</span></span><br><span class="line"><span class="keyword">if</span>(a == b)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">c</span><span class="params">(p)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//处理出来（b[i] - a[i）% p的结果 防止为负数 加了偏移量</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++) c[(b[i] - a[i] + p) % p]++;</span><br><span class="line"><span class="type">int</span> ans , minn = <span class="number">1e9</span>;</span><br><span class="line">    <span class="comment">//枚举x</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> x = <span class="number">1</span> ; x &lt; p ; x++)&#123;</span><br><span class="line"><span class="type">int</span> tmp = <span class="built_in">qmi</span>(x,p - <span class="number">2</span> , p);<span class="comment">//快速幂求逆元</span></span><br><span class="line"><span class="type">int</span> times = <span class="number">-1</span>;</span><br><span class="line">        <span class="comment">//因为取完%后 数的范围在 0 - p - 1 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i  = <span class="number">0</span> ; i &lt; p ;  i++)</span><br><span class="line"><span class="keyword">if</span>(c[i])</span><br><span class="line">times = <span class="built_in">max</span>(times,tmp * i % p); <span class="comment">//i 就是上式中的（b[i] - a[i]）% p 乘上 x的逆元 tmp 就是次数</span></span><br><span class="line"><span class="keyword">if</span>(times &lt; minn)&#123; <span class="comment">//更新结果</span></span><br><span class="line">minn = times;</span><br><span class="line">ans = x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line"><span class="comment">// cin &gt;&gt; T;</span></span><br><span class="line">T = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(T--) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>终于 …. 终于结束了 写题解真的好累啊(虽然有的题解 搬自官方题解)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;​	好久没写题了，被吊打（虽然以前也很菜）&lt;/p&gt;
&lt;p&gt;​	第一篇题解 纪念一下&lt;/p&gt;
&lt;h3 id=&quot;A-最大面积&quot;&gt;&lt;a href=</summary>
      
    
    
    
    <category term="牛客小白赛题解" scheme="http://example.com/categories/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="牛客小白赛题解" scheme="http://example.com/tags/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>费马小定理求逆元</title>
    <link href="http://example.com/2022/09/17/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86/"/>
    <id>http://example.com/2022/09/17/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86/</id>
    <published>2022-09-17T00:26:57.000Z</published>
    <updated>2022-09-18T13:05:24.913Z</updated>
    
    <content type="html"><![CDATA[<p>该贴转自网络</p><p>###该贴转自网络</p><h3 id="费马小定理定义及证明"><a href="#费马小定理定义及证明" class="headerlink" title="费马小定理定义及证明"></a>费马小定理定义及证明</h3><p><img src="https://i.loli.net/2020/10/16/HAnFarSYGyhRBZc.png" alt="image-20201016085335031"></p><h4 id="为什么每一个-Ai-a-mod-p-是独一无二的"><a href="#为什么每一个-Ai-a-mod-p-是独一无二的" class="headerlink" title="为什么每一个 Ai * a(mod p) 是独一无二的"></a>为什么每一个 Ai * a(mod p) 是独一无二的</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对于任意两个Ai×a而言, 二者的差值为a的整数倍,而(a,p)=1,因此(Ai,a)%p 一定不会得到相同的余数(同余的两个数的差值一定是mod的整数倍)。</span><br></pre></td></tr></table></figure><h4 id=""><a href="#" class="headerlink" title=""></a><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220918210213391.png" alt="image-20220918210213391"><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220918210302089.png" alt="image-20220918210302089"></h4><h4 id="费马小定理求逆元"><a href="#费马小定理求逆元" class="headerlink" title="费马小定理求逆元"></a>费马小定理求逆元</h4><p><img src="https://hasdsd-markdown.oss-cn-beijing.aliyuncs.com/img/image-20220918210347156.png" alt="image-20220918210347156"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line">ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">quick_pow</span><span class="params">(ll base,ll idx)</span></span>&#123;</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(idx)&#123;</span><br><span class="line">        <span class="keyword">if</span>(idx &amp; <span class="number">1</span>)&#123;</span><br><span class="line">            ans *= base;</span><br><span class="line">            ans %= mod;</span><br><span class="line">        &#125;</span><br><span class="line">        base *= base;</span><br><span class="line">        base %= mod;</span><br><span class="line">        idx &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">inv</span><span class="params">(ll a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">quick_pow</span>(a,mod<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;该贴转自网络&lt;/p&gt;
&lt;p&gt;###该贴转自网络&lt;/p&gt;
&lt;h3 id=&quot;费马小定理定义及证明&quot;&gt;&lt;a href=&quot;#费马小定理定义及证明&quot; class=&quot;headerlink&quot; title=&quot;费马小定理定义及证明&quot;&gt;&lt;/a&gt;费马小定理定义及证明&lt;/h3&gt;&lt;p&gt;&lt;img sr</summary>
      
    
    
    
    <category term="费马小定理" scheme="http://example.com/categories/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86/"/>
    
    
    <category term="费马小定理" scheme="http://example.com/tags/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>高精度乘法</title>
    <link href="http://example.com/2022/09/17/%E9%AB%98%E7%B2%BE%E5%BA%A6%E4%B9%98%E6%B3%95/"/>
    <id>http://example.com/2022/09/17/%E9%AB%98%E7%B2%BE%E5%BA%A6%E4%B9%98%E6%B3%95/</id>
    <published>2022-09-17T00:26:57.000Z</published>
    <updated>2022-09-19T08:11:13.638Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">mul</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        List&lt;Integer&gt; A = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> a.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span> ; i--) A.add(a.charAt(i) - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;Integer&gt; C = mu(A,b);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> C.size() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(C.get(k) == <span class="number">0</span> &amp;&amp; k &gt; <span class="number">0</span>) k--; <span class="comment">//去掉前置0</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> k ; i &gt;= <span class="number">0</span> ; i--)&#123;</span><br><span class="line">            System.out.print(C.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//y总高精度乘法模板</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">mu</span><span class="params">(List&lt;Integer&gt; A, <span class="type">int</span> B)</span> &#123;</span><br><span class="line">            List&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ; i &lt; A.size() || t != <span class="number">0</span>; i++)&#123;</span><br><span class="line">                 <span class="keyword">if</span>(i &lt; A.size()) t += A.get(i) * B;</span><br><span class="line">                 C.add(t % <span class="number">10</span>);</span><br><span class="line">                 t = t / <span class="number">10</span> ;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> C;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    <category term="高精度" scheme="http://example.com/categories/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
    
    <category term="高精度" scheme="http://example.com/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>高精度减法</title>
    <link href="http://example.com/2022/09/17/%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%87%8F%E6%B3%95/"/>
    <id>http://example.com/2022/09/17/%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%87%8F%E6%B3%95/</id>
    <published>2022-09-17T00:26:57.000Z</published>
    <updated>2022-09-18T06:35:45.530Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">sub</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//输入 输出 模板</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        <span class="type">String</span> <span class="variable">b</span> <span class="operator">=</span> sc.next();</span><br><span class="line"></span><br><span class="line">        List&lt;Integer&gt; A = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;Integer&gt; B = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> a.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) A.add(a.charAt(i) - <span class="string">&#x27;0&#x27;</span>);  <span class="comment">//高位在前 低位在后</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> b.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) B.add(b.charAt(i) - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cmp(A, B)) &#123;</span><br><span class="line">            List&lt;Integer&gt; C = su(A, B);</span><br><span class="line">            <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> C.size() - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(C.get(k) == <span class="number">0</span> &amp;&amp; k &gt; <span class="number">0</span>) k--; <span class="comment">//去掉前置0</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> k; i &gt;= <span class="number">0</span>; i--) System.out.print(C.get(i));        <span class="comment">//输出的时候反向输出 先输出高位</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            List&lt;Integer&gt; C = su(B, A);</span><br><span class="line">            <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> C.size() - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(C.get(k) == <span class="number">0</span> &amp;&amp; k &gt; <span class="number">0</span>) k--; <span class="comment">//去掉前置0</span></span><br><span class="line">            System.out.print(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> k; i &gt;= <span class="number">0</span>; i--) System.out.print(C.get(i));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//y总模板</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">su</span><span class="params">(List&lt;Integer&gt; A, List&lt;Integer&gt; B)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, t = <span class="number">0</span>; i &lt; A.size(); i++) &#123;</span><br><span class="line">            t = A.get(i) - t;</span><br><span class="line">            <span class="keyword">if</span> (i &lt; B.size()) t -= B.get(i);</span><br><span class="line">            C.add((t + <span class="number">10</span>) % <span class="number">10</span>);  <span class="comment">//t &gt;0 0 时 仍未t t&lt;0时 借一位加10 </span></span><br><span class="line">            <span class="keyword">if</span> (t &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                t = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                t = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> C;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断A，B大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">cmp</span><span class="params">(List&lt;Integer&gt; A, List&lt;Integer&gt; B)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (A.size() != B.size()) <span class="keyword">return</span> A.size() &gt; B.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> A.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (A.get(i) != B.get(i)) &#123;</span><br><span class="line">                <span class="keyword">return</span> A.get(i) &gt; B.get(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    <category term="高精度" scheme="http://example.com/categories/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
    
    <category term="高精度" scheme="http://example.com/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>高精度加法</title>
    <link href="http://example.com/2022/09/17/%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%8A%A0%E6%B3%95/"/>
    <id>http://example.com/2022/09/17/%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%8A%A0%E6%B3%95/</id>
    <published>2022-09-17T00:26:57.000Z</published>
    <updated>2022-09-18T06:35:16.133Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C = A + B, A &gt;= 0, B &gt;= 0</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">add</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A, vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (A.<span class="built_in">size</span>() &lt; B.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="built_in">add</span>(B, A);</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        t += A[i];</span><br><span class="line">        <span class="keyword">if</span> (i &lt; B.<span class="built_in">size</span>()) t += B[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (t) C.<span class="built_in">push_back</span>(t);</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        <span class="type">String</span> <span class="variable">b</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        </span><br><span class="line">        List&lt;Integer&gt; A = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;Integer&gt; B = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> a.length() - <span class="number">1</span> ; i &gt;= <span class="number">0</span> ; i--) A.add(a.charAt(i) - <span class="string">&#x27;0&#x27;</span> );</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> b.length() - <span class="number">1</span> ; i &gt;= <span class="number">0</span> ; i--) B.add(b.charAt(i) - <span class="string">&#x27;0&#x27;</span> );</span><br><span class="line">        </span><br><span class="line">        List&lt;Integer&gt; C = add(A,B);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> C.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i -- ) System.out.print((C.get(i)));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">add</span><span class="params">(List&lt;Integer&gt; A, List&lt;Integer&gt; B)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (A.size()&lt;B.size()) <span class="keyword">return</span> add(B,A);</span><br><span class="line">        <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ; i &lt; A.size(); i++)&#123;</span><br><span class="line">            t += A.get(i);</span><br><span class="line">            <span class="keyword">if</span>(i &lt; B.size()) t += B.get(i);</span><br><span class="line">            A.set(i,t % <span class="number">10</span>);</span><br><span class="line">            t = t / <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (t!=<span class="number">0</span>) A.add(t);</span><br><span class="line">        <span class="keyword">return</span> A;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="高精度" scheme="http://example.com/categories/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
    
    <category term="高精度" scheme="http://example.com/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>高精度除法</title>
    <link href="http://example.com/2022/09/17/%E9%AB%98%E7%B2%BE%E5%BA%A6%E9%99%A4%E6%B3%95/"/>
    <id>http://example.com/2022/09/17/%E9%AB%98%E7%B2%BE%E5%BA%A6%E9%99%A4%E6%B3%95/</id>
    <published>2022-09-17T00:26:57.000Z</published>
    <updated>2022-09-18T06:35:25.651Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">div</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        List&lt;Integer&gt; A = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> a.length() - <span class="number">1</span>;i &gt;= <span class="number">0</span>;i--) A.add(a.charAt(i) - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;Integer&gt; C = di(A,b);</span><br><span class="line">        <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(C.get(k) == <span class="number">0</span> &amp;&amp; k &lt; C.size() - <span class="number">1</span>) k++; <span class="comment">//去除0</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span>k;i &lt;= C.size() - <span class="number">1</span> ; i++)&#123;     </span><br><span class="line">            System.out.print(C.get(i));     <span class="comment">//商</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.print(r);        <span class="comment">//余数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">di</span><span class="params">(List&lt;Integer&gt; A, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//模拟除法</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> A.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span> ; i--) &#123;</span><br><span class="line">            r = r * <span class="number">10</span> + A.get(i);</span><br><span class="line">            C.add(r / b);</span><br><span class="line">            r %= b;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//此处如果反转函数的话 输入输出就和 加减除法相同</span></span><br><span class="line">        <span class="keyword">return</span> C;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    <category term="高精度" scheme="http://example.com/categories/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
    
    <category term="高精度" scheme="http://example.com/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
  </entry>
  
</feed>
